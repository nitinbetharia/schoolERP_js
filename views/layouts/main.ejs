<!DOCTYPE html>
<html lang="en" class="h-full">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="<%= description || 'School ERP Management System - Comprehensive educational administration platform' %>">
    <meta name="author" content="School ERP System">
    <meta name="robots" content="noindex, nofollow">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    
    <!-- Security Headers -->
    <meta http-equiv="Content-Security-Policy" content="default-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net https://cdnjs.cloudflare.com https://unpkg.com">
    
    <!-- Page Title -->
    <title><%= title %><%= tenant && tenant.name ? ' - ' + tenant.name : ' - School ERP System' %></title>
    
    <!-- Preload Critical Resources -->
    <link rel="preload" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" as="style">
    <link rel="preload" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" as="style">
    
    <!-- Favicon -->
    <% if (tenant && tenant.branding && tenant.branding.favicon) { %>
    <link rel="icon" type="image/x-icon" href="<%= tenant.branding.favicon %>">
    <% } else { %>
    <link rel="icon" type="image/x-icon" href="/static/images/favicon.ico">
    <% } %>
    
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" 
          integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
    
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
          integrity="sha512-iecdLmaskl7CVkqkXNQ/ZH/XLlvWZOJyj7Yy7tcenmpD1ypASozpmT/E0iPtmFIB46ZmdtAc9eNBvH0H/ZpiBw=="
          crossorigin="anonymous" referrerpolicy="no-referrer">
    
    <!-- Google Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    
    <!-- Custom CSS -->
    <link rel="stylesheet" href="/static/css/app.css">
    <link rel="stylesheet" href="/static/css/viewport-management.css">
    
    <!-- Dynamic Branding & Theme Variables -->
    <style>
        :root {
            /* Default Theme Colors */
            --bs-primary: #0d6efd;
            --bs-secondary: #6c757d;
            --bs-success: #198754;
            --bs-info: #0dcaf0;
            --bs-warning: #ffc107;
            --bs-danger: #dc3545;
            --bs-dark: #212529;
            --bs-light: #f8f9fa;
            
            <% if (tenant && tenant.branding) { %>
            /* Tenant Specific Branding */
            --tenant-primary: <%= tenant.branding.primaryColor || '#0d6efd' %>;
            --tenant-secondary: <%= tenant.branding.secondaryColor || '#6c757d' %>;
            --tenant-accent: <%= tenant.branding.accentColor || '#198754' %>;
            --tenant-logo: url('<%= tenant.branding.logo || "" %>');
            <% } else if (user && (user.role && (user.role.toUpperCase() === 'SYSTEM_ADMIN' || user.role.toLowerCase() === 'system-admin'))) { %>
            /* System Admin Theme */
            --tenant-primary: #1e40af;
            --tenant-secondary: #1e3a8a;
            --tenant-accent: #3b82f6;
            <% } else { %>
            /* Default Theme */
            --tenant-primary: var(--bs-primary);
            --tenant-secondary: var(--bs-secondary);
            --tenant-accent: var(--bs-success);
            <% } %>
            
            /* Application Specific Variables */
            --app-font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            --app-sidebar-width: 280px;
            --app-header-height: 70px;
            --app-border-radius: 0.5rem;
            --app-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
            --app-shadow-lg: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
        }
        
        /* Custom Styles */
        body {
            font-family: var(--app-font-family);
            background-color: #f8f9fa;
            overflow-x: hidden; /* Prevent horizontal scroll */
        }
        
        html {
            overflow-x: hidden; /* Prevent horizontal scroll at document level */
        }
        
        /* Container safety */
        .container-fluid {
            max-width: 100%;
            overflow-x: hidden;
        }
        
        .brand-primary { background-color: var(--tenant-primary) !important; }
        .brand-secondary { background-color: var(--tenant-secondary) !important; }
        .brand-accent { background-color: var(--tenant-accent) !important; }
        .text-brand-primary { color: var(--tenant-primary) !important; }
        .text-brand-secondary { color: var(--tenant-secondary) !important; }
        .text-brand-accent { color: var(--tenant-accent) !important; }
        .border-brand-primary { border-color: var(--tenant-primary) !important; }
        
        .btn-brand-primary {
            background-color: var(--tenant-primary);
            border-color: var(--tenant-primary);
            color: white;
        }
        .btn-brand-primary:hover {
            background-color: var(--tenant-secondary);
            border-color: var(--tenant-secondary);
            color: white;
        }
        
        /* Layout Utilities */
        .main-content {
            min-height: calc(100vh - var(--app-header-height));
            max-height: calc(100vh - var(--app-header-height));
            padding-top: var(--app-header-height);
            overflow-y: auto;
            overflow-x: hidden;
        }
        
        .app-header {
            height: var(--app-header-height);
            box-shadow: var(--app-shadow);
        }
        
        /* Viewport Management */
        .viewport-container {
            max-width: 100vw;
            overflow-x: hidden;
        }
        
        /* Mobile-first responsive design */
        .mobile-warning {
            display: none;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 1rem;
            text-align: center;
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            z-index: 1100;
            box-shadow: 0 2px 10px rgba(0,0,0,0.2);
        }
        
        @media (max-width: 768px) {
            .desktop-optimized .mobile-warning {
                display: block;
            }
            
            .desktop-optimized .main-content {
                padding-top: calc(var(--app-header-height) + 60px);
            }
        }
        
        .loading-spinner {
            animation: spin 1s linear infinite;
        }
        
        @keyframes spin {
            from { transform: rotate(0deg); }
            to { transform: rotate(360deg); }
        }
        
        /* Notification Styles */
        .notification-container {
            position: fixed;
            top: 80px;
            right: 20px;
            z-index: 1060;
            max-width: 400px;
        }
        
        /* Fix dropdown z-index issues */
        .dropdown-menu {
            z-index: 1070 !important;
            position: absolute !important;
        }
        
        .navbar .dropdown-menu,
        .header .dropdown-menu,
        .app-header .dropdown-menu {
            z-index: 1070 !important;
            position: absolute !important;
        }
        
        /* Ensure header has proper stacking context */
        .app-header {
            z-index: 1030;
            position: relative;
        }
        
        /* Main content should be below dropdowns */
        .main-content,
        main {
            z-index: 1;
            position: relative;
        }
        
        /* Custom Scrollbar */
        ::-webkit-scrollbar {
            width: 8px;
        }
        
        ::-webkit-scrollbar-track {
            background: #f1f1f1;
        }
        
        ::-webkit-scrollbar-thumb {
            background: #c1c1c1;
            border-radius: 4px;
        }
        
        ::-webkit-scrollbar-thumb:hover {
            background: #a8a8a8;
        }
        
        /* Print Styles */
        @media print {
            .no-print { display: none !important; }
            .print-break-before { page-break-before: always; }
            .print-break-after { page-break-after: always; }
        }
        
        /* Sidebar Layout Styles */
        .sidebar {
            position: fixed;
            top: var(--app-header-height);
            left: 0;
            height: calc(100vh - var(--app-header-height));
            overflow-y: auto;
            z-index: 1020;
        }
        
        .sidebar-layout-main {
            margin-left: 0;
            padding-top: var(--app-header-height);
            min-height: calc(100vh - var(--app-header-height));
        }
        
        /* Responsive sidebar adjustments */
        @media (min-width: 768px) {
            .sidebar-layout-main.col-md-9 {
                margin-left: 25%;
            }
        }
        
        @media (min-width: 992px) {
            .sidebar-layout-main.col-lg-10 {
                margin-left: 16.666667%;
            }
        }
        
        /* Sidebar navigation styles */
        .sidebar .nav-link {
            color: #495057;
            padding: 0.75rem 1rem;
            border-radius: 0.375rem;
            margin: 0.125rem 0.5rem;
        }
        
        .sidebar .nav-link:hover {
            background-color: #f8f9fa;
            color: var(--tenant-primary);
        }
        
        .sidebar .nav-link.active {
            background-color: var(--tenant-primary);
            color: white;
        }
        
        .sidebar .nav-section {
            margin-bottom: 1.5rem;
        }
        
        .sidebar .sidebar-heading {
            font-size: 0.75rem;
            font-weight: 600;
            color: #6c757d;
            text-transform: uppercase;
            letter-spacing: 0.05em;
            padding: 0.5rem 1rem;
            margin-bottom: 0.5rem;
        }
    </style>
    
    <!-- Page-specific CSS -->
    <% if (typeof styles !== 'undefined' && Array.isArray(styles)) { %>
        <% styles.forEach(style => { %>
            <link rel="stylesheet" href="<%= style %>">
        <% }) %>
    <% } %>
</head>

<body class="h-100">
    <!-- Loading Overlay -->
    <div id="loadingOverlay" class="position-fixed top-0 start-0 w-100 h-100 bg-white d-flex justify-content-center align-items-center" style="z-index: 9999; display: none !important;">
        <div class="text-center">
            <div class="spinner-border text-brand-primary mb-3" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
            <p class="text-muted">Loading...</p>
        </div>
    </div>
    
    <!-- Notification Container -->
    <div id="notificationContainer" class="notification-container"></div>
    
    <!-- Main Layout Container -->
    <div class="viewport-container">
        <!-- Mobile Warning for Desktop-Optimized Pages -->
        <div class="mobile-warning desktop-optimized" style="display: none;">
            <i class="fas fa-desktop me-2"></i>
            <strong>Desktop View Recommended</strong>
            <p class="mb-0">This page is optimized for larger screens. For the best experience, please use a desktop or tablet device.</p>
        </div>
    <div class="d-flex flex-column h-100">
        
        <!-- Header Section -->
        <% if (!hideHeader) { %>
        <header class="app-header bg-white border-bottom fixed-top no-print">
            <% if (user) { %>
                <%- include('../partials/header/authenticated') %>
            <% } else { %>
                <%- include('../partials/header/public') %>
            <% } %>
        </header>
        <% } %>
        
        <!-- Navigation Section -->
        <% 
        // Determine layout type early
        let isSidebarLayout = false;
        if (user && !hideNav) {
            // Dynamic navigation mapping - easily configurable
            const navMap = {
                'SYSTEM_ADMIN': 'system-admin',
                'system-admin': 'system-admin',
                'TRUST_ADMIN': 'trust-admin',
                'trust-admin': 'trust-admin',
                'TEACHER': 'teacher',
                'teacher': 'teacher',
                'STAFF': 'default',
                'staff': 'default'
            };
            
            // Get navigation template name, fallback to default
            const navTemplate = navMap[user.role] || 'default';
            isSidebarLayout = navTemplate === 'system-admin';
        }
        %>
        
        <% if (user && !hideNav) { %>
        <% if (isSidebarLayout) { %>
        <!-- Sidebar Layout for System Admin -->
        <div class="container-fluid">
            <div class="form-row">
                <!-- Sidebar Navigation -->
                <nav class="no-print">
                    <%- include('../partials/nav/system-admin') %>
                </nav>
                
                <!-- Main Content with Sidebar -->
                <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4 main-content" role="main">
                    <!-- Flash Messages -->
                    <% if (typeof flash !== 'undefined') { %>
                    <div class="flash-messages">
                        <% ['success', 'error', 'warning', 'info'].forEach(type => { %>
                            <% if (flash[type] && flash[type].length > 0) { %>
                            <div class="alert alert-<%= type === 'error' ? 'danger' : type %> alert-dismissible fade show mx-3 mt-3" role="alert">
                                <i class="fas fa-<%= type === 'success' ? 'check-circle' : type === 'error' ? 'exclamation-circle' : type === 'warning' ? 'exclamation-triangle' : 'info-circle' %> me-2"></i>
                                <%= Array.isArray(flash[type]) ? flash[type].join(', ') : flash[type] %>
                                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                            </div>
                            <% } %>
                        <% }) %>
                    </div>
                    <% } %>
                    
                    <div class="py-4">
                        <%- body %>
                    </div>
                </main>
            </div>
        </div>
        <% } else { %>
        <!-- Regular Layout for other roles -->
        <% 
        const navMap = {
            'SYSTEM_ADMIN': 'system-admin',
            'system-admin': 'system-admin',
            'TRUST_ADMIN': 'trust-admin',
            'trust-admin': 'trust-admin',
            'TEACHER': 'teacher',
            'teacher': 'teacher',
            'STAFF': 'default',
            'staff': 'default'
        };
        const navTemplate = navMap[user.role] || 'default';
        %>
        <nav class="no-print">
            <%- include('../partials/nav/' + navTemplate) %>
        </nav>
        
        <!-- Flash Messages for regular navigation layouts -->
        <% if (typeof flash !== 'undefined') { %>
        <div class="flash-messages">
            <% ['success', 'error', 'warning', 'info'].forEach(type => { %>
                <% if (flash[type] && flash[type].length > 0) { %>
                <div class="alert alert-<%= type === 'error' ? 'danger' : type %> alert-dismissible fade show mx-3 mt-3" role="alert">
                    <i class="fas fa-<%= type === 'success' ? 'check-circle' : type === 'error' ? 'exclamation-circle' : type === 'warning' ? 'exclamation-triangle' : 'info-circle' %> me-2"></i>
                    <%= Array.isArray(flash[type]) ? flash[type].join(', ') : flash[type] %>
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
                <% } %>
            <% }) %>
        </div>
        <% } %>
        
        <!-- Main Content Area for regular navigation layouts -->
        <main class="flex-grow-1 main-content" role="main">
            <div class="container-fluid py-4">
                <%- body %>
            </div>
        </main>
        <% } %>
        <% } else { %>
        <!-- Layout for pages without user or with hidden navigation -->
        <!-- Flash Messages -->
        <% if (typeof flash !== 'undefined') { %>
        <div class="flash-messages">
            <% ['success', 'error', 'warning', 'info'].forEach(type => { %>
                <% if (flash[type] && flash[type].length > 0) { %>
                <div class="alert alert-<%= type === 'error' ? 'danger' : type %> alert-dismissible fade show mx-3 mt-3" role="alert">
                    <i class="fas fa-<%= type === 'success' ? 'check-circle' : type === 'error' ? 'exclamation-circle' : type === 'warning' ? 'exclamation-triangle' : 'info-circle' %> me-2"></i>
                    <%= Array.isArray(flash[type]) ? flash[type].join(', ') : flash[type] %>
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
                <% } %>
            <% }) %>
        </div>
        <% } %>
        
        <!-- Main Content Area for pages without navigation -->
        <main class="flex-grow-1 main-content" role="main">
            <div class="container-fluid py-4">
                <%- body %>
            </div>
        </main>
        <% } %>
        
        <!-- Footer -->
        <% if (!hideFooter) { %>
        <footer class="bg-white border-top mt-auto py-3 no-print">
            <div class="container-fluid">
                <div class="row align-items-center">
                    <div class="form-col">
                        <small class="text-muted">
                            &copy; <%= new Date().getFullYear() %> School ERP System. All rights reserved.
                            <% if (tenant && tenant.name) { %>
                                | <%= tenant.name %>
                            <% } %>
                        </small>
                    </div>
                    <div class="form-col">
                        <small class="text-muted">
                            <a href="/help" class="text-decoration-none text-muted me-3">Help</a>
                            <a href="/privacy" class="text-decoration-none text-muted me-3">Privacy</a>
                            <a href="/terms" class="text-decoration-none text-muted">Terms</a>
                        </small>
                    </div>
                </div>
            </div>
        </footer>
        <% } %>
    </div>
    
    <!-- JavaScript Libraries -->
    <!-- Bootstrap JavaScript -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" 
            integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" 
            crossorigin="anonymous"></script>
    
    <!-- Custom Application JavaScript -->
    <script src="/static/js/app.js"></script>
    
    <!-- Mobile Responsive Helper -->
    <script src="/static/js/mobile-responsive-helper.js"></script>
    
    <!-- Global JavaScript Functions -->
    <script>
        // Global App Configuration
        window.SchoolERP = {
            version: '1.0.0',
            user: <% if (user) { %><%- JSON.stringify(user) %><% } else { %>null<% } %>,
            tenant: <% if (tenant) { %><%- JSON.stringify(tenant) %><% } else { %>null<% } %>,
            csrfToken: '<%= typeof csrfToken !== "undefined" ? csrfToken : "" %>',
            apiBase: '/api/v1'
        };
        
        // Global Utility Functions
        window.showNotification = function(message, type = 'info', duration = 5000, title = null) {
            const container = document.getElementById('notificationContainer');
            if (!container) return;
            
            const notificationId = 'notification-' + Date.now();
            const alertClass = type === 'error' ? 'danger' : type;
            const icon = {
                success: 'check-circle',
                error: 'exclamation-circle',
                warning: 'exclamation-triangle',
                info: 'info-circle'
            }[type] || 'info-circle';
            
            const notification = document.createElement('div');
            notification.id = notificationId;
            notification.className = `alert alert-${alertClass} alert-dismissible fade show mb-2`;
            notification.setAttribute('role', 'alert');
            notification.innerHTML = `
                <i class="fas fa-${icon} me-2"></i>
                ${title ? `<strong>${title}</strong><br>` : ''}${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            `;
            
            container.appendChild(notification);
            
            // Auto dismiss
            if (duration > 0) {
                setTimeout(() => {
                    const element = document.getElementById(notificationId);
                    if (element) {
                        const bsAlert = new bootstrap.Alert(element);
                        bsAlert.close();
                    }
                }, duration);
            }
        };
        
        window.showLoading = function(show = true) {
            const overlay = document.getElementById('loadingOverlay');
            if (overlay) {
                overlay.style.display = show ? 'flex' : 'none';
            }
        };
        
        window.confirmAction = function(message, callback) {
            if (confirm(message)) {
                callback();
            }
        };
        
        // AJAX Helper Functions
        window.apiRequest = async function(url, options = {}) {
            const defaultOptions = {
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                }
            };
            
            if (window.SchoolERP.csrfToken) {
                defaultOptions.headers['X-CSRF-Token'] = window.SchoolERP.csrfToken;
            }
            
            const config = { ...defaultOptions, ...options };
            if (config.body && typeof config.body === 'object') {
                config.body = JSON.stringify(config.body);
            }
            
            try {
                const response = await fetch(url, config);
                const data = await response.json();
                
                if (!response.ok) {
                    throw new Error(data.message || `HTTP ${response.status}`);
                }
                
                return data;
            } catch (error) {
                console.error('API Request failed:', error);
                throw error;
            }
        };
        
        // Form Helpers
        window.handleFormSubmit = function(formElement, options = {}) {
            formElement.addEventListener('submit', async function(e) {
                e.preventDefault();
                
                const submitBtn = formElement.querySelector('button[type="submit"]');
                const originalText = submitBtn?.innerHTML;
                
                try {
                    if (submitBtn) {
                        submitBtn.disabled = true;
                        submitBtn.innerHTML = '<i class="fas fa-spinner loading-spinner me-2"></i>Loading...';
                    }
                    
                    const formData = new FormData(formElement);
                    const data = Object.fromEntries(formData.entries());
                    
                    const result = await window.apiRequest(formElement.action || window.location.pathname, {
                        method: formElement.method || 'POST',
                        body: data
                    });
                    
                    if (options.onSuccess) {
                        options.onSuccess(result);
                    } else if (result.redirect) {
                        window.location.href = result.redirect;
                    } else {
                        window.showNotification(result.message || 'Operation completed successfully', 'success');
                    }
                } catch (error) {
                    if (options.onError) {
                        options.onError(error);
                    } else {
                        window.showNotification(error.message || 'An error occurred', 'error');
                    }
                } finally {
                    if (submitBtn) {
                        submitBtn.disabled = false;
                        submitBtn.innerHTML = originalText;
                    }
                }
            });
        };
        
        // Initialize application
        document.addEventListener('DOMContentLoaded', function() {
            // Auto-hide flash messages
            setTimeout(() => {
                const alerts = document.querySelectorAll('.flash-messages .alert');
                alerts.forEach(alert => {
                    const bsAlert = new bootstrap.Alert(alert);
                    bsAlert.close();
                });
            }, 5000);
            
            // Initialize tooltips
            const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });
            
            // Initialize popovers
            const popoverTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="popover"]'));
            popoverTriggerList.map(function (popoverTriggerEl) {
                return new bootstrap.Popover(popoverTriggerEl);
            });
        });
    </script>
    
    <!-- Page-specific JavaScript -->
    <% if (typeof scripts !== 'undefined' && Array.isArray(scripts)) { %>
        <% scripts.forEach(script => { %>
            <script src="<%= script %>"></script>
        <% }) %>
    <% } %>
    
    <!-- Inline JavaScript -->
    <% if (typeof inlineScripts !== 'undefined') { %>
    <script>
        <%= inlineScripts %>
    </script>
    <% } %>
    
    <!-- Viewport Management Scripts -->
    <script>
        // Mobile detection and warning
        function isMobileDevice() {
            return window.innerWidth <= 768;
        }
        
        function showMobileWarning(selector = '.desktop-optimized') {
            if (isMobileDevice()) {
                document.querySelectorAll(selector + ' .mobile-warning').forEach(warning => {
                    warning.style.display = 'block';
                });
            }
        }
        
        // Tab system for mobile
        function initTabSystem(containerSelector) {
            const container = document.querySelector(containerSelector);
            if (!container || !isMobileDevice()) return;
            
            const tabNavs = container.querySelectorAll('.tab-nav button');
            const tabPanes = container.querySelectorAll('.tab-pane');
            
            tabNavs.forEach((nav, index) => {
                nav.addEventListener('click', () => {
                    // Remove active classes
                    tabNavs.forEach(n => n.classList.remove('active'));
                    tabPanes.forEach(p => p.classList.remove('active'));
                    
                    // Add active classes
                    nav.classList.add('active');
                    if (tabPanes[index]) {
                        tabPanes[index].classList.add('active');
                    }
                });
            });
            
            // Activate first tab by default
            if (tabNavs.length > 0) {
                tabNavs[0].click();
            }
        }
        
        // Initialize on page load
        document.addEventListener('DOMContentLoaded', function() {
            showMobileWarning();
            initTabSystem('.tab-system');
        });
        
        // Handle window resize
        window.addEventListener('resize', function() {
            showMobileWarning();
        });
    </script>
    </div> <!-- Close viewport-container -->
</body>
</html>
