<!-- Fee Reports and Analytics -->
<main class="main-content">
    <!-- Page Header -->
    <div class="page-header">
        <div class="header-content">
            <nav class="breadcrumb">
                <a href="/fees" class="breadcrumb-link">
                    <i class="fas fa-money-bill-wave"></i>
                    Fee Management
                </a>
                <span class="breadcrumb-separator">/</span>
                <span class="breadcrumb-current">Reports</span>
            </nav>
            
            <h1 class="page-title">Fee Reports & Analytics</h1>
            <p class="page-description">Comprehensive financial reports and analytics</p>
        </div>
        
        <div class="header-actions">
            <button class="btn btn-secondary" onclick="generateCustomReport()">
                <i class="fas fa-chart-bar"></i>
                Custom Report
            </button>
            <button class="btn btn-brand-primary" onclick="exportAllReports()">
                <i class="fas fa-download"></i>
                Export Reports
            </button>
        </div>
    </div>

    <!-- Report Summary Cards -->
    <div class="report-summary">
        <div class="summary-card collections">
            <div class="card-header">
                <i class="fas fa-coins"></i>
                <h3>Total Collections</h3>
            </div>
            <div class="card-value">
                <span class="amount">₹<%= reportData.totalCollected.toLocaleString('en-IN') %></span>
                <span class="period">This Month</span>
            </div>
            <div class="card-trend">
                <i class="fas fa-arrow-up trend-up"></i>
                <span>+12.5% from last month</span>
            </div>
        </div>
        
        <div class="summary-card outstanding">
            <div class="card-header">
                <i class="fas fa-exclamation-circle"></i>
                <h3>Outstanding Amount</h3>
            </div>
            <div class="card-value">
                <span class="amount">₹<%= reportData.totalOutstanding.toLocaleString('en-IN') %></span>
                <span class="period">Pending Collection</span>
            </div>
            <div class="card-trend">
                <i class="fas fa-arrow-down trend-down"></i>
                <span>-8.3% from last month</span>
            </div>
        </div>
        
        <div class="summary-card collection-rate">
            <div class="card-header">
                <i class="fas fa-percentage"></i>
                <h3>Collection Rate</h3>
            </div>
            <div class="card-value">
                <span class="percentage"><%= reportData.collectionRate %>%</span>
                <span class="period">This Month</span>
            </div>
            <div class="card-trend">
                <i class="fas fa-arrow-up trend-up"></i>
                <span>+3.2% from last month</span>
            </div>
        </div>
        
        <div class="summary-card defaulters">
            <div class="card-header">
                <i class="fas fa-user-clock"></i>
                <h3>Defaulters</h3>
            </div>
            <div class="card-value">
                <span class="count"><%= reportData.defaulterCount %></span>
                <span class="period">Students</span>
            </div>
            <div class="card-trend">
                <i class="fas fa-arrow-down trend-down"></i>
                <span>-15 from last month</span>
            </div>
        </div>
    </div>

    <!-- Report Filters -->
    <div class="report-filters">
        <h3>Report Filters</h3>
        <div class="filter-row">
            <div class="filter-group">
                <label for="reportType">Report Type</label>
                <select id="reportType" class="form-control" onchange="updateReportType()">
                    <option value="collection">Collection Report</option>
                    <option value="outstanding">Outstanding Report</option>
                    <option value="class-wise">Class-wise Report</option>
                    <option value="fee-type">Fee Type Report</option>
                    <option value="defaulters">Defaulters Report</option>
                    <option value="trends">Trend Analysis</option>
                </select>
            </div>
            
            <div class="filter-group">
                <label for="dateRange">Date Range</label>
                <select id="dateRange" class="form-control" onchange="updateDateRange()">
                    <option value="current-month">Current Month</option>
                    <option value="last-month">Last Month</option>
                    <option value="current-quarter">Current Quarter</option>
                    <option value="last-quarter">Last Quarter</option>
                    <option value="current-year">Current Academic Year</option>
                    <option value="custom">Custom Range</option>
                </select>
            </div>
            
            <div class="filter-group" id="customDateGroup" style="display: none;">
                <label for="startDate">Start Date</label>
                <input type="date" id="startDate" class="form-control">
            </div>
            
            <div class="filter-group" id="customEndDateGroup" style="display: none;">
                <label for="endDate">End Date</label>
                <input type="date" id="endDate" class="form-control">
            </div>
            
            <div class="filter-group">
                <label for="classFilter">Class</label>
                <select id="classFilter" class="form-control">
                    <option value="">All Classes</option>
                    <option value="Nursery">Nursery</option>
                    <option value="LKG">LKG</option>
                    <option value="UKG">UKG</option>
                    <option value="1st">1st</option>
                    <option value="2nd">2nd</option>
                    <option value="3rd">3rd</option>
                    <option value="4th">4th</option>
                    <option value="5th">5th</option>
                    <option value="6th">6th</option>
                    <option value="7th">7th</option>
                    <option value="8th">8th</option>
                    <option value="9th">9th</option>
                    <option value="10th">10th</option>
                    <option value="11th">11th</option>
                    <option value="12th">12th</option>
                </select>
            </div>
            
            <div class="filter-actions">
                <button class="btn btn-brand-primary" onclick="generateReport()">
                    <i class="fas fa-search"></i>
                    Generate Report
                </button>
                <button class="btn btn-outline" onclick="resetFilters()">
                    <i class="fas fa-undo"></i>
                    Reset
                </button>
            </div>
        </div>
    </div>

    <!-- Charts Section -->
    <div class="charts-section">
        <div class="chart-container responsive">
            <div class="chart-header">
                <h3>Monthly Collection Trend</h3>
                <div class="chart-actions">
                    <button class="chart-action" onclick="exportChart('collection-trend')">
                        <i class="fas fa-download"></i>
                    </button>
                </div>
            </div>
            <div class="chart-content">
                    <div class="chart-content">
                    <canvas id="collectionTrendChart" width="400" height="200"></div></div></canvas>
        </div>
        
        <div class="chart-container responsive">
            <div class="chart-header">
                <h3>Class-wise Collection Distribution</h3>
                <div class="chart-actions">
                    <button class="chart-action" onclick="exportChart('class-distribution')">
                        <i class="fas fa-download"></i>
                    </button>
                </div>
            </div>
            <div class="chart-content">
                    <div class="chart-content">
                    <canvas id="classDistributionChart" width="400" height="200"></div></div></canvas>
        </div>
    </div>

    <!-- Detailed Report Table -->
    <div class="report-table-container">
        <div class="table-header">
            <h3 id="reportTableTitle">Collection Report - Current Month</h3>
            <div class="table-actions">
                <button class="btn btn-outline" onclick="exportTableData()">
                    <i class="fas fa-file-excel"></i>
                    Export to Excel
                </button>
                <button class="btn btn-outline" onclick="printReport()">
                    <i class="fas fa-print"></i>
                    Print Report
                </button>
            </div>
        </div>

        <div class="table-responsive">
            <div class="data-table-container">
                <div class="data-table-container">
                <table class="data-table report-table" id="reportTable">
                <thead id="reportTableHead">
                    <!-- Dynamic header based on report type -->
                </thead>
                <tbody id="reportTableBody">
                    <!-- Dynamic content based on report type -->
                </tbody>
            </table>
        </div>
    </div>

    <!-- Outstanding Details (Conditional) -->
    <div id="outstandingSection" class="outstanding-section" style="display: none;">
        <h3>Outstanding Amount Details</h3>
        <div class="outstanding-cards">
            <div class="outstanding-card overdue">
                <h4>Overdue (>30 days)</h4>
                <div class="amount">₹<%= reportData.overdueAmount ? reportData.overdueAmount.toLocaleString('en-IN') : '0' %></div>
                <div class="count"><%= reportData.overdueCount || 0 %> students</div>
            </div>
            
            <div class="outstanding-card current">
                <h4>Current Month</h4>
                <div class="amount">₹<%= reportData.currentOutstanding ? reportData.currentOutstanding.toLocaleString('en-IN') : '0' %></div>
                <div class="count"><%= reportData.currentOutstandingCount || 0 %> students</div>
            </div>
            
            <div class="outstanding-card upcoming">
                <h4>Upcoming Dues</h4>
                <div class="amount">₹<%= reportData.upcomingDues ? reportData.upcomingDues.toLocaleString('en-IN') : '0' %></div>
                <div class="count"><%= reportData.upcomingDuesCount || 0 %> students</div>
            </div>
        </div>
    </div>
</main>

<!-- Report Specific Styles -->
<style>
.report-summary {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 1.5rem;
    margin-bottom: 2rem;
}

.summary-card {
    background: #fff;
    padding: 1.5rem;
    border-radius: 8px;
    box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    border-left: 4px solid;
}

.summary-card.collections {
    border-left-color: #28a745;
}

.summary-card.outstanding {
    border-left-color: #dc3545;
}

.summary-card.collection-rate {
    border-left-color: #17a2b8;
}

.summary-card.defaulters {
    border-left-color: #ffc107;
}

.card-header {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    margin-bottom: 1rem;
}

.card-header i {
    font-size: 1.5rem;
}

.collections .card-header i {
    color: #28a745;
}

.outstanding .card-header i {
    color: #dc3545;
}

.collection-rate .card-header i {
    color: #17a2b8;
}

.defaulters .card-header i {
    color: #ffc107;
}

.card-value {
    margin-bottom: 0.5rem;
}

.amount, .percentage, .count {
    display: block;
    font-size: 2rem;
    font-weight: bold;
    line-height: 1;
}

.period {
    color: #6c757d;
    font-size: 0.9rem;
}

.card-trend {
    display: flex;
    align-items: center;
    gap: 0.25rem;
    font-size: 0.8rem;
}

.trend-up {
    color: #28a745;
}

.trend-down {
    color: #dc3545;
}

.report-filters {
    background: #fff;
    padding: 1.5rem;
    border-radius: 8px;
    box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    margin-bottom: 2rem;
}

.filter-row {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 1rem;
    align-items: end;
}

.filter-group label {
    display: block;
    margin-bottom: 0.5rem;
    font-weight: 500;
}

.filter-actions {
    display: flex;
    gap: 0.5rem;
}

.charts-section {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
    gap: 2rem;
    margin-bottom: 2rem;
}

.chart-container {
    background: #fff;
    padding: 1.5rem;
    border-radius: 8px;
    box-shadow: 0 2px 8px rgba(0,0,0,0.1);
}

.chart-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1rem;
}

.chart-action {
    background: none;
    border: 1px solid #ddd;
    padding: 0.5rem;
    border-radius: 4px;
    cursor: pointer;
    color: #6c757d;
}

.chart-action:hover {
    background: #f8f9fa;
    color: #007bff;
}

.report-table-container {
    background: #fff;
    border-radius: 8px;
    box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    margin-bottom: 2rem;
}

.outstanding-section {
    background: #fff;
    padding: 1.5rem;
    border-radius: 8px;
    box-shadow: 0 2px 8px rgba(0,0,0,0.1);
}

.outstanding-cards {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 1rem;
    margin-top: 1rem;
}

.outstanding-card {
    padding: 1rem;
    border-radius: 6px;
    text-align: center;
}

.outstanding-card.overdue {
    background: #fff5f5;
    border: 1px solid #fed7d7;
}

.outstanding-card.current {
    background: #fffbf0;
    border: 1px solid #feebc8;
}

.outstanding-card.upcoming {
    background: #f0f9ff;
    border: 1px solid #bfdbfe;
}

.outstanding-card h4 {
    margin: 0 0 0.5rem 0;
    font-size: 0.9rem;
    color: #6c757d;
}

.outstanding-card .amount {
    font-size: 1.5rem;
    font-weight: bold;
    margin-bottom: 0.25rem;
}

.outstanding-card .count {
    font-size: 0.8rem;
    color: #6c757d;
}

@media (max-width: 768px) {
    .report-summary {
        grid-template-columns: repeat(2, 1fr);
    }
    
    .filter-row {
        grid-template-columns: 1fr;
    }
    
    .charts-section {
        grid-template-columns: 1fr;
    }
    
    .outstanding-cards {
        grid-template-columns: 1fr;
    }
}

@media (max-width: 480px) {
    .report-summary {
        grid-template-columns: 1fr;
    }
}
</style>

<!-- Report Generation Scripts -->
<script>
// Mock chart data - in real implementation, fetch from server
const chartData = {
    collectionTrend: {
        labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'],
        datasets: [{
            label: 'Collections (₹)',
            data: [450000, 520000, 480000, 560000, 590000, 620000],
            borderColor: '#28a745',
            backgroundColor: 'rgba(40, 167, 69, 0.1)',
            fill: true
        }]
    },
    classDistribution: {
        labels: ['1st-5th', '6th-8th', '9th-10th', '11th-12th'],
        datasets: [{
            data: [35, 25, 25, 15],
            backgroundColor: ['#007bff', '#28a745', '#ffc107', '#dc3545']
        }]
    }
};

// Report data templates
const reportTemplates = {
    collection: {
        title: 'Collection Report',
        headers: ['Student Name', 'Class', 'Roll No', 'Amount Paid', 'Payment Date', 'Payment Method', 'Receipt No'],
        getData: () => [
            ['Rahul Sharma', '10th A', '001', '₹5,000', '2024-01-15', 'Cash', 'RCP001'],
            ['Priya Singh', '9th B', '023', '₹4,500', '2024-01-16', 'Online', 'RCP002'],
            ['Amit Kumar', '8th A', '045', '₹4,000', '2024-01-17', 'Cheque', 'RCP003']
        ]
    },
    outstanding: {
        title: 'Outstanding Report',
        headers: ['Student Name', 'Class', 'Roll No', 'Outstanding Amount', 'Due Date', 'Days Overdue', 'Contact'],
        getData: () => [
            ['Neha Gupta', '11th A', '012', '₹6,000', '2024-01-10', '5', '9876543210'],
            ['Rohit Verma', '7th B', '034', '₹3,500', '2024-01-08', '7', '9876543211'],
            ['Anita Das', '9th A', '056', '₹4,500', '2024-01-05', '10', '9876543212']
        ]
    },
    defaulters: {
        title: 'Defaulters Report',
        headers: ['Student Name', 'Class', 'Roll No', 'Total Outstanding', 'Last Payment', 'Contact', 'Parent Name'],
        getData: () => [
            ['Vikash Yadav', '12th A', '008', '₹12,000', '2023-11-15', '9876543213', 'Rajesh Yadav'],
            ['Sunita Devi', '6th C', '029', '₹8,500', '2023-12-20', '9876543214', 'Ramesh Kumar'],
            ['Deepak Singh', '10th B', '041', '₹9,500', '2023-12-01', '9876543215', 'Suresh Singh']
        ]
    }
};

function updateReportType() {
    const reportType = document.getElementById('reportType').value;
    const outstandingSection = document.getElementById('outstandingSection');
    
    if (reportType === 'outstanding' || reportType === 'defaulters') {
        outstandingSection.style.display = 'block';
    } else {
        outstandingSection.style.display = 'none';
    }
    
    generateReport();
}

function updateDateRange() {
    const dateRange = document.getElementById('dateRange').value;
    const customDateGroup = document.getElementById('customDateGroup');
    const customEndDateGroup = document.getElementById('customEndDateGroup');
    
    if (dateRange === 'custom') {
        customDateGroup.style.display = 'block';
        customEndDateGroup.style.display = 'block';
    } else {
        customDateGroup.style.display = 'none';
        customEndDateGroup.style.display = 'none';
    }
}

function generateReport() {
    const reportType = document.getElementById('reportType').value;
    const template = reportTemplates[reportType];
    
    if (!template) {
        alert('Report template not found for: ' + reportType);
        return;
    }
    
    // Update table title
    document.getElementById('reportTableTitle').textContent = template.title;
    
    // Update table headers
    const thead = document.getElementById('reportTableHead');
    thead.innerHTML = '<tr>' + template.headers.map(h => `<th>${h}</th>`).join('') + '</tr>';
    
    // Update table body
    const tbody = document.getElementById('reportTableBody');
    const data = template.getData();
    tbody.innerHTML = data.map(row => 
        '<tr>' + row.map(cell => `<td>${cell}</td>`).join('') + '</tr>'
    ).join('');
    
    // Show success message
    showNotification('Report generated successfully!', 'success');
}

function resetFilters() {
    document.getElementById('reportType').value = 'collection';
    document.getElementById('dateRange').value = 'current-month';
    document.getElementById('classFilter').value = '';
    document.getElementById('customDateGroup').style.display = 'none';
    document.getElementById('customEndDateGroup').style.display = 'none';
    document.getElementById('outstandingSection').style.display = 'none';
    
    generateReport();
}

function exportTableData() {
    alert('Table data will be exported to Excel format.');
}

function exportChart(chartType) {
    alert(`${chartType} chart will be exported as image.`);
}

function printReport() {
    window.print();
}

function generateCustomReport() {
    alert('Custom report builder will be opened.');
}

function exportAllReports() {
    alert('All reports will be exported as ZIP file.');
}

function showNotification(message, type) {
    // Simple notification system
    const notification = document.createElement('div');
    notification.className = `notification notification-${type}`;
    notification.textContent = message;
    notification.style.cssText = `
        position: fixed;
        top: 20px;
        right: 20px;
        background: ${type === 'success' ? '#28a745' : '#dc3545'};
        color: white;
        padding: 1rem 1.5rem;
        border-radius: 4px;
        box-shadow: 0 4px 8px rgba(0,0,0,0.2);
        z-index: 1000;
        animation: slideIn 0.3s ease;
    `;
    
    document.body.appendChild(notification);
    
    setTimeout(() => {
        notification.remove();
    }, 3000);
}

// Initialize charts
document.addEventListener('DOMContentLoaded', function() {
    // Initialize collection trend chart
    const collectionCtx = document.getElementById('collectionTrendChart').getContext('2d');
    // Note: In real implementation, include Chart.js library
    // new Chart(collectionCtx, {
    //     type: 'line',
    //     data: chartData.collectionTrend,
    //     options: { responsive: true }
    // });
    
    // Initialize class distribution chart  
    const classCtx = document.getElementById('classDistributionChart').getContext('2d');
    // new Chart(classCtx, {
    //     type: 'pie',
    //     data: chartData.classDistribution,
    //     options: { responsive: true }
    // });
    
    // Generate initial report
    generateReport();
    
    // Add CSS animation
    const style = document.createElement('style');
    style.textContent = `
        @keyframes slideIn {
            from { transform: translateX(100%); }
            to { transform: translateX(0); }
        }
    `;
    document.head.appendChild(style);
});
</script>
