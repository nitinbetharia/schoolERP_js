<!-- Student Reports -->
<main class="main-content">
    <!-- Page Header -->
    <div class="page-header">
        <div class="header-content">
            <nav class="breadcrumb">
                <a href="/dashboard" class="breadcrumb-link">
                    <i class="fas fa-home"></i>
                    Dashboard
                </a>
                <span class="breadcrumb-separator">/</span>
                <a href="/reports" class="breadcrumb-link">Reports</a>
                <span class="breadcrumb-separator">/</span>
                <span class="breadcrumb-current">Student Reports</span>
            </nav>
            
            <h1 class="page-title">
                <i class="fas fa-user-graduate"></i>
                Student Reports
            </h1>
            <p class="page-description">Comprehensive student data analysis and reporting</p>
        </div>
        
        <div class="header-actions">
            <button class="btn btn-outline" onclick="resetFilters()">
                <i class="fas fa-undo"></i>
                Reset Filters
            </button>
            <button class="btn btn-brand-primary" onclick="openExportModal()">
                <i class="fas fa-download"></i>
                Export Data
            </button>
        </div>
    </div>

    <!-- Filter Panel -->
    <div class="filter-panel d-none d-md-block">
        <div class="filter-section">
            <h4>Filter Options</h4>
            <div class="filter-form">
                <div class="filter-group">
                    <label for="reportTypeFilter">Report Type</label>
                    <select id="reportTypeFilter" class="form-control">
                        <option value="enrollment">Student Enrollment Report</option>
                        <option value="profile">Student Profile Report</option>
                        <option value="demographics">Demographics Report</option>
                        <option value="contact">Contact Information Report</option>
                        <option value="admission">Admission Analysis Report</option>
                        <option value="category">Category-wise Distribution</option>
                    </select>
                </div>
                
                <div class="filter-group">
                    <label for="classFilter">Class</label>
                    <select id="classFilter" class="form-control">
                        <option value="">All Classes</option>
                        <option value="nursery">Nursery</option>
                        <option value="lkg">LKG</option>
                        <option value="ukg">UKG</option>
                        <option value="1st">1st</option>
                        <option value="2nd">2nd</option>
                        <option value="3rd">3rd</option>
                        <option value="4th">4th</option>
                        <option value="5th">5th</option>
                        <option value="6th">6th</option>
                        <option value="7th">7th</option>
                        <option value="8th">8th</option>
                        <option value="9th">9th</option>
                        <option value="10th">10th</option>
                        <option value="11th">11th</option>
                        <option value="12th">12th</option>
                    </select>
                </div>
                
                <div class="filter-group">
                    <label for="sectionFilter">Section</label>
                    <select id="sectionFilter" class="form-control">
                        <option value="">All Sections</option>
                        <option value="A">Section A</option>
                        <option value="B">Section B</option>
                        <option value="C">Section C</option>
                        <option value="D">Section D</option>
                    </select>
                </div>
                
                <div class="filter-group">
                    <label for="genderFilter">Gender</label>
                    <select id="genderFilter" class="form-control">
                        <option value="">All Genders</option>
                        <option value="male">Male</option>
                        <option value="female">Female</option>
                        <option value="other">Other</option>
                    </select>
                </div>
                
                <div class="filter-group">
                    <label for="categoryFilter">Category</label>
                    <select id="categoryFilter" class="form-control">
                        <option value="">All Categories</option>
                        <option value="general">General</option>
                        <option value="obc">OBC</option>
                        <option value="sc">SC</option>
                        <option value="st">ST</option>
                        <option value="ews">EWS</option>
                    </select>
                </div>
                
                <div class="filter-group">
                    <label for="statusFilter">Status</label>
                    <select id="statusFilter" class="form-control">
                        <option value="">All Status</option>
                        <option value="active">Active</option>
                        <option value="inactive">Inactive</option>
                        <option value="transferred">Transferred</option>
                        <option value="graduated">Graduated</option>
                    </select>
                </div>
                
                <div class="filter-group">
                    <label for="admissionYearFilter">Admission Year</label>
                    <select id="admissionYearFilter" class="form-control">
                        <option value="">All Years</option>
                        <option value="2024-25">2024-25</option>
                        <option value="2023-24">2023-24</option>
                        <option value="2022-23">2022-23</option>
                        <option value="2021-22">2021-22</option>
                        <option value="2020-21">2020-21</option>
                    </select>
                </div>
                
                <div class="filter-actions">
                    <button class="btn btn-brand-primary" onclick="applyFilters()">
                        <i class="fas fa-filter"></i>
                        Apply Filters
                    </button>
                    <button class="btn btn-outline" onclick="clearFilters()">
                        <i class="fas fa-times"></i>
                        Clear
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Report Summary Stats -->
    <div class="report-stats">
        <div class="stat-card">
            <div class="stat-icon">
                <i class="fas fa-users"></i>
            </div>
            <div class="stat-details">
                <h3 id="totalStudents">1,245</h3>
                <p>Total Students</p>
            </div>
        </div>
        
        <div class="stat-card">
            <div class="stat-icon">
                <i class="fas fa-user-plus"></i>
            </div>
            <div class="stat-details">
                <h3 id="newAdmissions">87</h3>
                <p>New Admissions</p>
            </div>
        </div>
        
        <div class="stat-card">
            <div class="stat-icon">
                <i class="fas fa-venus-mars"></i>
            </div>
            <div class="stat-details">
                <h3 id="genderRatio">52:48</h3>
                <p>Gender Ratio (M:F)</p>
            </div>
        </div>
        
        <div class="stat-card">
            <div class="stat-icon">
                <i class="fas fa-chart-pie"></i>
            </div>
            <div class="stat-details">
                <h3 id="activeStudents">98.5%</h3>
                <p>Active Students</p>
            </div>
        </div>
    </div>

    <!-- Report Charts -->
    <div class="report-charts">
        <div class="chart-container responsive">
            <div class="chart-header">
                <h4>Class-wise Distribution</h4>
                <div class="chart-actions">
                    <select id="chartType" class="form-control small">
                        <option value="bar">Bar Chart</option>
                        <option value="pie">Pie Chart</option>
                        <option value="line">Line Chart</option>
                    </select>
                </div>
            </div>
            <div class="chart-content">
                <div class="chart-content">
                    <div class="chart-content">
                    <canvas id="distributionChart" width="400" height="200"></div></div></canvas>
            </div>
        </div>
        
        <div class="chart-container responsive">
            <div class="chart-header">
                <h4>Admission Trends</h4>
                <div class="chart-actions">
                    <select id="trendPeriod" class="form-control small">
                        <option value="monthly">Monthly</option>
                        <option value="quarterly">Quarterly</option>
                        <option value="yearly">Yearly</option>
                    </select>
                </div>
            </div>
            <div class="chart-content">
                <div class="chart-content">
                    <div class="chart-content">
                    <canvas id="trendChart" width="400" height="200"></div></div></canvas>
            </div>
        </div>
    </div>

    <!-- Data Table -->
    <div class="data-section responsive-table">
        <div class="section-header">
            <h4>Student Data</h4>
            <div class="section-actions">
                <div class="search-box">
                    <input type="text" id="dataSearch" placeholder="Search students..." class="form-control">
                    <i class="fas fa-search"></i>
                </div>
                <select id="recordsPerPage" class="form-control small">
                    <option value="25">25 per page</option>
                    <option value="50">50 per page</option>
                    <option value="100">100 per page</option>
                    <option value="all">Show All</option>
                </select>
            </div>
        </div>
        
        <div class="data-table-container">
            <div class="data-table-container">
                <div class="data-table-container">
                <table class="data-table" id="studentDataTable">
                <thead>
                    <tr>
                        <th><input type="checkbox" id="selectAll" onchange="toggleSelectAll()"></th>
                        <th sortable="true" data-column="admissionNo">Admission No</th>
                        <th sortable="true" data-column="name">Student Name</th>
                        <th sortable="true" data-column="class">Class</th>
                        <th sortable="true" data-column="section">Section</th>
                        <th sortable="true" data-column="gender">Gender</th>
                        <th sortable="true" data-column="category">Category</th>
                        <th sortable="true" data-column="admissionDate">Admission Date</th>
                        <th sortable="true" data-column="status">Status</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody id="studentTableBody">
                    <!-- Mock data will be loaded here -->
                </tbody>
            </table>
        </div>
        
        <div class="pagination-container">
            <div class="pagination-info">
                Showing <span id="showingFrom">1</span> to <span id="showingTo">25</span> of <span id="totalRecords">1245</span> records
            </div>
            <div class="pagination-controls">
                <button class="pagination-btn" id="prevPage" onclick="changePage(-1)">
                    <i class="fas fa-chevron-left"></i>
                </button>
                <div class="page-numbers" id="pageNumbers">
                    <!-- Page numbers will be generated here -->
                </div>
                <button class="pagination-btn" id="nextPage" onclick="changePage(1)">
                    <i class="fas fa-chevron-right"></i>
                </button>
            </div>
        </div>
    </div>
</main>

<!-- Export Modal -->
<div id="exportModal" class="modal">
    <div class="modal-content">
        <div class="modal-header">
            <h3>Export Student Data</h3>
            <button class="modal-close" onclick="closeExportModal()">
                <i class="fas fa-times"></i>
            </button>
        </div>
        <div class="modal-body">
            <form id="exportForm" onsubmit="exportData(event)">
                <div class="form-group">
                    <label for="exportFormat">Export Format</label>
                    <select id="exportFormat" name="format" class="form-control" required>
                        <option value="excel">Excel (.xlsx)</option>
                        <option value="pdf">PDF</option>
                        <option value="csv">CSV</option>
                    </select>
                </div>
                
                <div class="form-group">
                    <label for="exportFields">Fields to Include</label>
                    <div class="checkbox-group">
                        <label><input type="checkbox" name="fields" value="admissionNo" checked> Admission Number</label>
                        <label><input type="checkbox" name="fields" value="name" checked> Student Name</label>
                        <label><input type="checkbox" name="fields" value="class" checked> Class</label>
                        <label><input type="checkbox" name="fields" value="section" checked> Section</label>
                        <label><input type="checkbox" name="fields" value="gender" checked> Gender</label>
                        <label><input type="checkbox" name="fields" value="dob"> Date of Birth</label>
                        <label><input type="checkbox" name="fields" value="father"> Father's Name</label>
                        <label><input type="checkbox" name="fields" value="mother"> Mother's Name</label>
                        <label><input type="checkbox" name="fields" value="address"> Address</label>
                        <label><input type="checkbox" name="fields" value="phone"> Phone Number</label>
                        <label><input type="checkbox" name="fields" value="category"> Category</label>
                        <label><input type="checkbox" name="fields" value="admissionDate"> Admission Date</label>
                        <label><input type="checkbox" name="fields" value="status" checked> Status</label>
                    </div>
                </div>
                
                <div class="form-group">
                    <label for="exportScope">Export Scope</label>
                    <div class="radio-group">
                        <label><input type="radio" name="scope" value="current" checked> Current Page Only</label>
                        <label><input type="radio" name="scope" value="filtered"> All Filtered Results</label>
                        <label><input type="radio" name="scope" value="selected"> Selected Records Only</label>
                        <label><input type="radio" name="scope" value="all"> All Records</label>
                    </div>
                </div>
                
                <div class="form-actions">
                    <button type="button" class="btn btn-outline" onclick="closeExportModal()">Cancel</button>
                    <button type="submit" class="btn btn-brand-primary">
                        <i class="fas fa-download"></i>
                        Export Data
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Student Reports Styles -->
<style>
.filter-panel {
    background: #fff;
    border-radius: 8px;
    box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    margin-bottom: 2rem;
    padding: 2rem;
}

.filter-form {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 1.5rem;
    align-items: end;
}

.filter-actions {
    display: flex;
    gap: 1rem;
}

.report-stats {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 1.5rem;
    margin-bottom: 2rem;
}

.stat-card {
    display: flex;
    align-items: center;
    gap: 1rem;
    padding: 1.5rem;
    background: #fff;
    border-radius: 8px;
    box-shadow: 0 2px 8px rgba(0,0,0,0.1);
}

.stat-icon {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 3rem;
    height: 3rem;
    border-radius: 50%;
    background: rgba(0, 123, 255, 0.1);
    color: #007bff;
    font-size: 1.5rem;
}

.stat-details h3 {
    margin: 0 0 0.5rem 0;
    font-size: 1.5rem;
    font-weight: bold;
    color: #2c3e50;
}

.stat-details p {
    margin: 0;
    color: #6c757d;
    font-size: 0.9rem;
}

.report-charts {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
    gap: 2rem;
    margin-bottom: 2rem;
}

.chart-container {
    background: #fff;
    border-radius: 8px;
    box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    padding: 1.5rem;
}

.chart-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1rem;
}

.chart-header h4 {
    margin: 0;
}

.chart-actions .form-control {
    min-width: 120px;
}

.data-section {
    background: #fff;
    border-radius: 8px;
    box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    padding: 2rem;
}

.section-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1.5rem;
}

.section-actions {
    display: flex;
    gap: 1rem;
    align-items: center;
}

.search-box {
    position: relative;
}

.search-box input {
    padding-right: 2.5rem;
    min-width: 250px;
}

.search-box i {
    position: absolute;
    right: 0.75rem;
    top: 50%;
    transform: translateY(-50%);
    color: #6c757d;
}

.data-table-container {
    overflow-x: auto;
    margin-bottom: 1rem;
}

.data-table {
    width: 100%;
    border-collapse: collapse;
    margin-bottom: 1rem;
}

.data-table th {
    background: #f8f9fa;
    padding: 0.75rem;
    text-align: left;
    border-bottom: 2px solid #dee2e6;
    font-weight: 600;
    cursor: pointer;
}

.data-table th[sortable="true"]:hover {
    background: #e9ecef;
}

.data-table th[sortable="true"]::after {
    content: '\f0dc';
    font-family: 'Font Awesome 5 Free';
    font-weight: 900;
    margin-left: 0.5rem;
    opacity: 0.3;
}

.data-table th.sorted-asc::after {
    content: '\f0de';
    opacity: 1;
}

.data-table th.sorted-desc::after {
    content: '\f0dd';
    opacity: 1;
}

.data-table td {
    padding: 0.75rem;
    border-bottom: 1px solid #dee2e6;
}

.data-table tbody tr:hover {
    background: #f8f9fa;
}

.pagination-container {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding-top: 1rem;
    border-top: 1px solid #dee2e6;
}

.pagination-controls {
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

.pagination-btn {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 2rem;
    height: 2rem;
    border: 1px solid #dee2e6;
    background: #fff;
    border-radius: 4px;
    cursor: pointer;
    transition: all 0.2s;
}

.pagination-btn:hover:not(:disabled) {
    background: #007bff;
    color: white;
    border-color: #007bff;
}

.pagination-btn:disabled {
    opacity: 0.5;
    cursor: not-allowed;
}

.page-numbers {
    display: flex;
    gap: 0.25rem;
}

.page-number {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 2rem;
    height: 2rem;
    border: 1px solid #dee2e6;
    background: #fff;
    border-radius: 4px;
    cursor: pointer;
    transition: all 0.2s;
    font-size: 0.9rem;
}

.page-number.active {
    background: #007bff;
    color: white;
    border-color: #007bff;
}

.page-number:hover:not(.active) {
    background: #f8f9fa;
}

.checkbox-group {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 0.5rem;
}

.checkbox-group label,
.radio-group label {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.5rem;
    cursor: pointer;
}

.checkbox-group input,
.radio-group input {
    margin: 0;
}

.form-control.small {
    max-width: 150px;
}

@media (max-width: 768px) {
    .filter-form {
        grid-template-columns: 1fr;
    }
    
    .report-charts {
        grid-template-columns: 1fr;
    }
    
    .section-header {
        flex-direction: column;
        gap: 1rem;
        align-items: stretch;
    }
    
    .section-actions {
        flex-direction: column;
    }
    
    .search-box input {
        min-width: 100%;
    }
    
    .pagination-container {
        flex-direction: column;
        gap: 1rem;
    }
}
</style>

<!-- Student Reports Scripts -->
<script>
let currentPage = 1;
let recordsPerPage = 25;
let totalRecords = 1245;
let currentSortColumn = null;
let currentSortDirection = 'asc';
let selectedRows = new Set();

// Mock student data
const mockStudents = [
    { admissionNo: 'AD001', name: 'Aarav Sharma', class: '10th', section: 'A', gender: 'Male', category: 'General', admissionDate: '2024-04-15', status: 'Active' },
    { admissionNo: 'AD002', name: 'Aisha Patel', class: '10th', section: 'A', gender: 'Female', category: 'OBC', admissionDate: '2024-04-16', status: 'Active' },
    { admissionNo: 'AD003', name: 'Rahul Kumar', class: '9th', section: 'B', gender: 'Male', category: 'SC', admissionDate: '2024-04-17', status: 'Active' },
    { admissionNo: 'AD004', name: 'Priya Singh', class: '11th', section: 'C', gender: 'Female', category: 'General', admissionDate: '2024-04-18', status: 'Active' },
    { admissionNo: 'AD005', name: 'Arjun Verma', class: '12th', section: 'A', gender: 'Male', category: 'EWS', admissionDate: '2024-04-19', status: 'Inactive' }
];

function applyFilters() {
    showNotification('Filters applied successfully!', 'success');
    loadTableData();
    updateCharts();
    updateStats();
}

function clearFilters() {
    document.querySelectorAll('.filter-form select').forEach(select => select.value = '');
    showNotification('Filters cleared!', 'info');
    loadTableData();
    updateCharts();
    updateStats();
}

function resetFilters() {
    clearFilters();
}

function loadTableData() {
    const tbody = document.getElementById('studentTableBody');
    tbody.innerHTML = '';
    
    // Generate more mock data for demonstration
    for (let i = 0; i < Math.min(recordsPerPage, mockStudents.length); i++) {
        const student = mockStudents[i];
        const row = `
            <tr>
                <td><input type="checkbox" class="row-select" value="${student.admissionNo}" onchange="toggleRowSelect('${student.admissionNo}')"></td>
                <td>${student.admissionNo}</td>
                <td>${student.name}</td>
                <td>${student.class}</td>
                <td>${student.section}</td>
                <td>${student.gender}</td>
                <td><span class="category-badge ${student.category.toLowerCase()}">${student.category}</span></td>
                <td>${student.admissionDate}</td>
                <td><span class="status-badge ${student.status.toLowerCase()}">${student.status}</span></td>
                <td>
                    <button class="action-btn view-btn" onclick="viewStudent('${student.admissionNo}')">
                        <i class="fas fa-eye"></i>
                    </button>
                    <button class="action-btn edit-btn" onclick="editStudent('${student.admissionNo}')">
                        <i class="fas fa-edit"></i>
                    </button>
                </td>
            </tr>
        `;
        tbody.innerHTML += row;
    }
    
    updatePagination();
}

function updatePagination() {
    const totalPages = Math.ceil(totalRecords / recordsPerPage);
    const showingFrom = (currentPage - 1) * recordsPerPage + 1;
    const showingTo = Math.min(currentPage * recordsPerPage, totalRecords);
    
    document.getElementById('showingFrom').textContent = showingFrom;
    document.getElementById('showingTo').textContent = showingTo;
    document.getElementById('totalRecords').textContent = totalRecords;
    
    // Generate page numbers
    const pageNumbers = document.getElementById('pageNumbers');
    pageNumbers.innerHTML = '';
    
    const maxVisiblePages = 5;
    let startPage = Math.max(1, currentPage - Math.floor(maxVisiblePages / 2));
    let endPage = Math.min(totalPages, startPage + maxVisiblePages - 1);
    
    if (endPage - startPage + 1 < maxVisiblePages) {
        startPage = Math.max(1, endPage - maxVisiblePages + 1);
    }
    
    for (let i = startPage; i <= endPage; i++) {
        const pageBtn = document.createElement('div');
        pageBtn.className = `page-number ${i === currentPage ? 'active' : ''}`;
        pageBtn.textContent = i;
        pageBtn.onclick = () => goToPage(i);
        pageNumbers.appendChild(pageBtn);
    }
    
    // Update navigation buttons
    document.getElementById('prevPage').disabled = currentPage === 1;
    document.getElementById('nextPage').disabled = currentPage === totalPages;
}

function changePage(direction) {
    const totalPages = Math.ceil(totalRecords / recordsPerPage);
    const newPage = currentPage + direction;
    
    if (newPage >= 1 && newPage <= totalPages) {
        goToPage(newPage);
    }
}

function goToPage(page) {
    currentPage = page;
    loadTableData();
}

function toggleSelectAll() {
    const selectAll = document.getElementById('selectAll');
    const rowSelects = document.querySelectorAll('.row-select');
    
    rowSelects.forEach(checkbox => {
        checkbox.checked = selectAll.checked;
        if (selectAll.checked) {
            selectedRows.add(checkbox.value);
        } else {
            selectedRows.delete(checkbox.value);
        }
    });
}

function toggleRowSelect(admissionNo) {
    if (selectedRows.has(admissionNo)) {
        selectedRows.delete(admissionNo);
    } else {
        selectedRows.add(admissionNo);
    }
    
    // Update select all checkbox
    const selectAll = document.getElementById('selectAll');
    const rowSelects = document.querySelectorAll('.row-select');
    const checkedRows = document.querySelectorAll('.row-select:checked');
    
    selectAll.indeterminate = checkedRows.length > 0 && checkedRows.length < rowSelects.length;
    selectAll.checked = checkedRows.length === rowSelects.length;
}

function sortTable(column) {
    if (currentSortColumn === column) {
        currentSortDirection = currentSortDirection === 'asc' ? 'desc' : 'asc';
    } else {
        currentSortColumn = column;
        currentSortDirection = 'asc';
    }
    
    // Update sort indicators
    document.querySelectorAll('.data-table th').forEach(th => {
        th.classList.remove('sorted-asc', 'sorted-desc');
    });
    
    const sortedHeader = document.querySelector(`[data-column="${column}"]`);
    if (sortedHeader) {
        sortedHeader.classList.add(`sorted-${currentSortDirection}`);
    }
    
    loadTableData();
    showNotification(`Table sorted by ${column} (${currentSortDirection})`, 'info');
}

function updateCharts() {
    // Mock chart data - in real implementation, this would be fetched from server
    const distributionData = {
        labels: ['Nursery', 'LKG', 'UKG', '1st-5th', '6th-8th', '9th-10th', '11th-12th'],
        datasets: [{
            data: [45, 52, 48, 350, 280, 250, 220],
            backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9F40', '#FF6384']
        }]
    };
    
    // Mock implementation - replace with actual chart library
    console.log('Updating distribution chart with data:', distributionData);
    
    const trendData = {
        labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'],
        datasets: [{
            label: 'New Admissions',
            data: [15, 25, 35, 45, 30, 20],
            borderColor: '#007bff',
            backgroundColor: 'rgba(0, 123, 255, 0.1)'
        }]
    };
    
    console.log('Updating trend chart with data:', trendData);
}

function updateStats() {
    // Mock stats update - in real implementation, fetch from server
    document.getElementById('totalStudents').textContent = '1,245';
    document.getElementById('newAdmissions').textContent = '87';
    document.getElementById('genderRatio').textContent = '52:48';
    document.getElementById('activeStudents').textContent = '98.5%';
}

function viewStudent(admissionNo) {
    showNotification(`Viewing student: ${admissionNo}`, 'info');
    // Implement student view functionality
}

function editStudent(admissionNo) {
    showNotification(`Editing student: ${admissionNo}`, 'info');
    // Implement student edit functionality
}

function openExportModal() {
    document.getElementById('exportModal').style.display = 'block';
}

function closeExportModal() {
    document.getElementById('exportModal').style.display = 'none';
}

function exportData(event) {
    event.preventDefault();
    
    const formData = new FormData(event.target);
    const exportConfig = {
        format: formData.get('format'),
        fields: formData.getAll('fields'),
        scope: formData.get('scope')
    };
    
    showNotification('Preparing export...', 'info');
    
    // Mock export process
    setTimeout(() => {
        const fileName = `student_report_${new Date().toISOString().split('T')[0]}.${exportConfig.format === 'excel' ? 'xlsx' : exportConfig.format}`;
        showNotification(`Export completed: ${fileName}`, 'success');
        closeExportModal();
        
        // Mock download
        const link = document.createElement('a');
        link.href = '#';
        link.download = fileName;
        link.click();
    }, 2000);
}

function showNotification(message, type) {
    const notification = document.createElement('div');
    notification.className = `notification notification-${type}`;
    notification.textContent = message;
    
    let bgColor = '#28a745';
    if (type === 'error') bgColor = '#dc3545';
    if (type === 'info') bgColor = '#17a2b8';
    
    notification.style.cssText = `
        position: fixed;
        top: 20px;
        right: 20px;
        background: ${bgColor};
        color: white;
        padding: 1rem 1.5rem;
        border-radius: 4px;
        box-shadow: 0 4px 8px rgba(0,0,0,0.2);
        z-index: 1000;
        animation: slideIn 0.3s ease;
    `;
    
    document.body.appendChild(notification);
    
    setTimeout(() => {
        notification.remove();
    }, 3000);
}

// Event listeners
document.addEventListener('DOMContentLoaded', function() {
    loadTableData();
    updateCharts();
    updateStats();
    
    // Sort table headers
    document.querySelectorAll('[sortable="true"]').forEach(header => {
        header.addEventListener('click', () => {
            sortTable(header.dataset.column);
        });
    });
    
    // Search functionality
    document.getElementById('dataSearch').addEventListener('input', function(e) {
        // Implement search functionality
        console.log('Searching for:', e.target.value);
    });
    
    // Records per page change
    document.getElementById('recordsPerPage').addEventListener('change', function(e) {
        recordsPerPage = e.target.value === 'all' ? totalRecords : parseInt(e.target.value);
        currentPage = 1;
        loadTableData();
    });
    
    // Add CSS animation
    const style = document.createElement('style');
    style.textContent = `
        @keyframes slideIn {
            from { transform: translateX(100%); }
            to { transform: translateX(0); }
        }
        
        .category-badge {
            padding: 0.25rem 0.5rem;
            border-radius: 1rem;
            font-size: 0.8rem;
            font-weight: 500;
        }
        
        .category-badge.general {
            background: #e3f2fd;
            color: #1976d2;
        }
        
        .category-badge.obc {
            background: #fff3e0;
            color: #f57c00;
        }
        
        .category-badge.sc {
            background: #f3e5f5;
            color: #7b1fa2;
        }
        
        .category-badge.st {
            background: #e8f5e8;
            color: #388e3c;
        }
        
        .category-badge.ews {
            background: #fce4ec;
            color: #c2185b;
        }
        
        .status-badge {
            padding: 0.25rem 0.75rem;
            border-radius: 1rem;
            font-size: 0.8rem;
            font-weight: 500;
        }
        
        .status-badge.active {
            background: #d4edda;
            color: #155724;
        }
        
        .status-badge.inactive {
            background: #f8d7da;
            color: #721c24;
        }
        
        .action-btn {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            width: 2rem;
            height: 2rem;
            border-radius: 4px;
            border: none;
            background: none;
            color: #6c757d;
            cursor: pointer;
            transition: all 0.2s;
            margin-right: 0.25rem;
        }
        
        .view-btn:hover {
            background: #e6f7ff;
            color: #0066cc;
        }
        
        .edit-btn:hover {
            background: #fff7e6;
            color: #d46b08;
        }
    `;
    document.head.appendChild(style);
});

// Close modal when clicking outside
window.onclick = function(event) {
    const modal = document.getElementById('exportModal');
    if (event.target === modal) {
        closeExportModal();
    }
};
</script>
