<!-- Reset Password Page -->
<%
// Layout configuration for clean auth page
hideNav = true;
hideFooter = true;
%>

<div class="min-vh-100 d-flex align-items-center justify-content-center py-3 px-3">
    <div class="container-fluid">
        <div class="row justify-content-center">
            <div class="form-col">
                <!-- Reset Password Card -->
                <div class="card shadow-lg border-0">
                    <div class="card-body p-4 p-sm-5">
                        
                        <!-- Logo & Title -->
                        <div class="text-center mb-5">
                            <% if (tenant && tenant.branding && tenant.branding.logo) { %>
                            <img src="<%= tenant.branding.logo %>" alt="<%= tenant.name %>" class="mb-4" style="height: 60px;">
                            <% } else { %>
                            <div class="bg-brand-primary text-white rounded d-inline-flex align-items-center justify-content-center mb-4" 
                                 style="width: 60px; height: 60px; font-size: 1.5rem;">
                                <i class="fas fa-lock"></i>
                            </div>
                            <% } %>
                            
                            <h2 class="h4 text-dark fw-semibold mb-2">
                                Create New Password
                            </h2>
                            <p class="text-muted mb-0">
                                Please create a strong password for your account.
                            </p>
                        </div>

                        <!-- Token Validation Status -->
                        <% if (locals.tokenValid === false) { %>
                        <!-- Invalid/Expired Token -->
                        <div class="text-center">
                            <div class="mb-4">
                                <div class="bg-danger bg-opacity-10 text-danger rounded-circle d-inline-flex align-items-center justify-content-center mb-3" 
                                     style="width: 80px; height: 80px; font-size: 2rem;">
                                    <i class="fas fa-times"></i>
                                </div>
                            </div>
                            <h4 class="text-danger mb-3">Invalid Reset Link</h4>
                            <p class="text-muted mb-4">
                                This password reset link is invalid or has expired. 
                                Please request a new password reset link.
                            </p>
                            <div class="alert alert-warning border-0 bg-warning bg-opacity-10 mb-4">
                                <small class="text-warning">
                                    <i class="fas fa-info-circle me-1"></i>
                                    Reset links expire after 30 minutes for your security.
                                </small>
                            </div>
                            <a href="/forgot-password" class="btn btn-brand-primary mb-2">
                                <i class="fas fa-redo me-2"></i>Request New Reset Link
                            </a>
                            <br>
                            <a href="/login" class="btn btn-link">
                                <i class="fas fa-arrow-left me-2"></i>Back to Login
                            </a>
                        </div>
                        <% } else { %>
                        
                        <!-- Valid Token - Show Reset Form -->
                        <form id="resetPasswordForm" method="POST" action="/reset-password/<%= locals.token || '' %>" class="needs-validation" novalidate>
                            
                            <!-- New Password Field -->
                            <div class="mb-4">
                                <label for="password" class="form-label fw-medium">
                                    New Password
                                </label>
                                <div class="input-group">
                                    <span class="input-group-text bg-light border-end-0">
                                        <i class="fas fa-lock text-muted"></i>
                                    </span>
                                    <input type="password" 
                                           class="form-control border-start-0 border-end-0 ps-0" 
                                           id="password" 
                                           name="password" 
                                           placeholder="Enter your new password"
                                           required 
                                           minlength="8"
                                           autocomplete="new-password">
                                    <button class="btn btn-outline-secondary border-start-0" 
                                            type="button" 
                                            id="togglePassword">
                                        <i class="fas fa-eye"></i>
                                    </button>
                                </div>
                                <div class="invalid-feedback">
                                    Password must be at least 8 characters long.
                                </div>
                                
                                <!-- Password Strength Indicator -->
                                <div class="mt-2">
                                    <div class="progress" style="height: 4px;">
                                        <div class="progress-bar" role="progressbar" id="passwordStrength" 
                                             style="width: 0%;" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100">
                                        </div>
                                    </div>
                                    <small id="passwordStrengthText" class="form-text text-muted">
                                        <i class="fas fa-info-circle me-1"></i>
                                        Password strength will be shown here
                                    </small>
                                </div>
                            </div>
                            
                            <!-- Confirm Password Field -->
                            <div class="mb-4">
                                <label for="confirmPassword" class="form-label fw-medium">
                                    Confirm New Password
                                </label>
                                <div class="input-group">
                                    <span class="input-group-text bg-light border-end-0">
                                        <i class="fas fa-check text-muted"></i>
                                    </span>
                                    <input type="password" 
                                           class="form-control border-start-0 ps-0" 
                                           id="confirmPassword" 
                                           name="confirmPassword" 
                                           placeholder="Confirm your new password"
                                           required 
                                           autocomplete="new-password">
                                </div>
                                <div class="invalid-feedback">
                                    Passwords must match.
                                </div>
                            </div>
                            
                            <!-- Password Requirements -->
                            <div class="alert alert-light border mb-4">
                                <h6 class="alert-heading mb-2">
                                    <i class="fas fa-shield-alt me-2"></i>Password Requirements
                                </h6>
                                <ul class="list-unstyled mb-0 small" id="passwordRequirements">
                                    <li class="text-muted">
                                        <i class="fas fa-circle me-2" style="font-size: 0.5rem;"></i>
                                        At least 8 characters long
                                    </li>
                                    <li class="text-muted">
                                        <i class="fas fa-circle me-2" style="font-size: 0.5rem;"></i>
                                        Include uppercase and lowercase letters
                                    </li>
                                    <li class="text-muted">
                                        <i class="fas fa-circle me-2" style="font-size: 0.5rem;"></i>
                                        Include at least one number
                                    </li>
                                    <li class="text-muted">
                                        <i class="fas fa-circle me-2" style="font-size: 0.5rem;"></i>
                                        Include at least one special character
                                    </li>
                                </ul>
                            </div>
                            
                            <!-- Submit Button -->
                            <button type="submit" class="btn btn-brand-primary w-100 py-2 fw-medium" id="submitButton">
                                <i class="fas fa-save me-2"></i>
                                Update Password
                            </button>
                            
                        </form>
                        
                        <% } %>
                        
                        <!-- Security Notice -->
                        <div class="text-center mt-4 pt-3 border-top">
                            <small class="text-muted">
                                <i class="fas fa-lock me-1"></i>
                                Your password is encrypted and secure
                            </small>
                        </div>
                    </div>
                    
                    <!-- Form Status Indicator -->
                    <div class="card-footer bg-light text-center py-3">
                        <div id="formStatus" class="small text-muted">
                            <i class="fas fa-shield-alt me-1"></i>
                            Secure password reset powered by <%= tenant && tenant.name ? tenant.name : 'School ERP System' %>
                        </div>
                    </div>
                </div>
                
                <!-- Help Links -->
                <div class="card border-0 bg-transparent mt-4">
                    <div class="card-body text-center p-3">
                        <div class="d-flex justify-content-center gap-4 flex-wrap">
                            <a href="/help/password-security" class="text-decoration-none small">
                                <i class="fas fa-question-circle me-1"></i>Password Tips
                            </a>
                            <a href="/support" class="text-decoration-none small">
                                <i class="fas fa-headset me-1"></i>Need Help?
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Custom CSS for Reset Password Page -->
<style>
    /* Hide header on reset password page */
    .app-header {
        display: none !important;
    }
    
    /* Prevent horizontal scroll */
    html, body {
        overflow-x: hidden !important;
        max-width: 100%;
    }
    
    /* Global box-sizing for all elements */
    *, *::before, *::after {
        box-sizing: border-box;
    }
    
    /* Password strength indicator colors */
    .progress-bar.strength-weak {
        background-color: #dc3545;
    }
    
    .progress-bar.strength-fair {
        background-color: #fd7e14;
    }
    
    .progress-bar.strength-good {
        background-color: #ffc107;
    }
    
    .progress-bar.strength-strong {
        background-color: #198754;
    }
    
    /* Password requirements styling */
    #passwordRequirements li.met {
        color: #198754 !important;
    }
    
    #passwordRequirements li.met i {
        color: #198754 !important;
    }
    
    /* Form validation improvements */
    .was-validated .input-group .form-control:invalid {
        border-color: #dc3545;
        box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.25);
    }
    
    .was-validated .input-group .form-control:invalid ~ .input-group-text,
    .was-validated .input-group .form-control:invalid ~ .btn {
        border-color: #dc3545;
    }
    
    .was-validated .input-group .form-control:valid {
        border-color: #198754;
        box-shadow: 0 0 0 0.2rem rgba(25, 135, 84, 0.25);
    }
    
    .was-validated .input-group .form-control:valid ~ .input-group-text,
    .was-validated .input-group .form-control:valid ~ .btn {
        border-color: #198754;
    }
    
    /* Responsive adjustments */
    @media (max-width: 576px) {
        .container-fluid {
            padding-left: 10px;
            padding-right: 10px;
        }
        
        .card-body {
            padding: 2rem 1.5rem !important;
        }
    }
</style>

<!-- JavaScript for Reset Password Form -->
<script>
    document.addEventListener('DOMContentLoaded', function() {
        <% if (locals.tokenValid !== false) { %>
        const form = document.getElementById('resetPasswordForm');
        const passwordInput = document.getElementById('password');
        const confirmPasswordInput = document.getElementById('confirmPassword');
        const submitButton = document.getElementById('submitButton');
        const formStatus = document.getElementById('formStatus');
        const togglePasswordBtn = document.getElementById('togglePassword');
        const passwordStrength = document.getElementById('passwordStrength');
        const passwordStrengthText = document.getElementById('passwordStrengthText');
        const requirements = document.getElementById('passwordRequirements');
        
        // Password visibility toggle
        togglePasswordBtn.addEventListener('click', function() {
            const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
            passwordInput.setAttribute('type', type);
            
            const icon = this.querySelector('i');
            icon.className = type === 'password' ? 'fas fa-eye' : 'fas fa-eye-slash';
        });
        
        // Password strength checker
        function checkPasswordStrength(password) {
            let strength = 0;
            let feedback = [];
            
            // Length check
            if (password.length >= 8) {
                strength += 25;
                updateRequirement(0, true);
            } else {
                updateRequirement(0, false);
                feedback.push('At least 8 characters');
            }
            
            // Uppercase and lowercase
            if (/[a-z]/.test(password) && /[A-Z]/.test(password)) {
                strength += 25;
                updateRequirement(1, true);
            } else {
                updateRequirement(1, false);
                feedback.push('Upper and lowercase letters');
            }
            
            // Numbers
            if (/\d/.test(password)) {
                strength += 25;
                updateRequirement(2, true);
            } else {
                updateRequirement(2, false);
                feedback.push('At least one number');
            }
            
            // Special characters
            if (/[!@#$%^&*(),.?":{}|<>]/.test(password)) {
                strength += 25;
                updateRequirement(3, true);
            } else {
                updateRequirement(3, false);
                feedback.push('At least one special character');
            }
            
            return { strength, feedback };
        }
        
        function updateRequirement(index, met) {
            const requirement = requirements.children[index];
            if (met) {
                requirement.classList.add('met');
                requirement.querySelector('i').className = 'fas fa-check-circle me-2';
            } else {
                requirement.classList.remove('met');
                requirement.querySelector('i').className = 'fas fa-circle me-2';
                requirement.querySelector('i').style.fontSize = '0.5rem';
            }
        }
        
        function updateStrengthIndicator(strength, feedback) {
            passwordStrength.style.width = strength + '%';
            passwordStrength.setAttribute('aria-valuenow', strength);
            
            // Remove all strength classes
            passwordStrength.classList.remove('strength-weak', 'strength-fair', 'strength-good', 'strength-strong');
            
            let strengthClass = '';
            let strengthText = '';
            
            if (strength === 0) {
                strengthText = 'Enter a password to see strength';
            } else if (strength < 50) {
                strengthClass = 'strength-weak';
                strengthText = 'Weak password - ' + feedback.join(', ');
            } else if (strength < 75) {
                strengthClass = 'strength-fair';
                strengthText = 'Fair password - ' + (feedback.length ? feedback.join(', ') : 'Good progress');
            } else if (strength < 100) {
                strengthClass = 'strength-good';
                strengthText = 'Good password - ' + (feedback.length ? feedback.join(', ') : 'Almost there');
            } else {
                strengthClass = 'strength-strong';
                strengthText = 'Strong password - All requirements met';
            }
            
            passwordStrength.classList.add(strengthClass);
            passwordStrengthText.innerHTML = `<i class="fas fa-shield-alt me-1"></i>${strengthText}`;
        }
        
        // Real-time password validation
        passwordInput.addEventListener('input', function() {
            const { strength, feedback } = checkPasswordStrength(this.value);
            updateStrengthIndicator(strength, feedback);
            
            // Validate confirm password if it has content
            if (confirmPasswordInput.value) {
                validatePasswordMatch();
            }
        });
        
        // Confirm password validation
        function validatePasswordMatch() {
            if (passwordInput.value === confirmPasswordInput.value) {
                confirmPasswordInput.setCustomValidity('');
                confirmPasswordInput.classList.add('is-valid');
                confirmPasswordInput.classList.remove('is-invalid');
            } else {
                confirmPasswordInput.setCustomValidity('Passwords do not match');
                confirmPasswordInput.classList.add('is-invalid');
                confirmPasswordInput.classList.remove('is-valid');
            }
        }
        
        confirmPasswordInput.addEventListener('input', validatePasswordMatch);
        confirmPasswordInput.addEventListener('blur', validatePasswordMatch);
        
        // Form submission
        form.addEventListener('submit', function(e) {
            e.preventDefault();
            
            // Validate form
            if (!form.checkValidity()) {
                e.stopPropagation();
                form.classList.add('was-validated');
                return;
            }
            
            // Check password strength
            const { strength } = checkPasswordStrength(passwordInput.value);
            if (strength < 75) {
                if (!confirm('Your password strength is below recommended. Are you sure you want to continue?')) {
                    return;
                }
            }
            
            // Show loading state
            submitButton.disabled = true;
            submitButton.innerHTML = '<span class="spinner-border spinner-border-sm me-2"></span>Updating...';
            formStatus.innerHTML = '<i class="fas fa-sync fa-spin me-1"></i>Updating your password...';
            
            // Prepare form data
            const formData = new FormData(form);
            
            // Submit form via fetch
            fetch(form.action, {
                method: 'POST',
                body: formData,
                headers: {
                    'X-Requested-With': 'XMLHttpRequest'
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Success - show confirmation and redirect
                    form.innerHTML = `
                        <div class="text-center">
                            <div class="mb-4">
                                <div class="bg-success bg-opacity-10 text-success rounded-circle d-inline-flex align-items-center justify-content-center mb-3" 
                                     style="width: 80px; height: 80px; font-size: 2rem;">
                                    <i class="fas fa-check"></i>
                                </div>
                            </div>
                            <h4 class="text-success mb-3">Password Updated!</h4>
                            <p class="text-muted mb-4">
                                Your password has been successfully updated. You can now login with your new password.
                            </p>
                            <a href="/login" class="btn btn-brand-primary">
                                <i class="fas fa-sign-in-alt me-2"></i>Continue to Login
                            </a>
                        </div>
                    `;
                    
                    formStatus.innerHTML = '<i class="fas fa-check-circle text-success me-1"></i>Password updated successfully';
                    
                    // Show notification
                    if (window.showNotification) {
                        window.showNotification('Password updated successfully', 'success');
                    }
                    
                    // Auto-redirect after 3 seconds
                    setTimeout(() => {
                        window.location.href = '/login';
                    }, 3000);
                } else {
                    throw new Error(data.error || 'Failed to update password');
                }
            })
            .catch(error => {
                console.error('Reset error:', error);
                
                // Show error message
                const errorMsg = error.message || 'Failed to update password. Please try again.';
                if (window.showNotification) {
                    window.showNotification(errorMsg, 'error');
                }
                
                // Reset form state
                submitButton.disabled = false;
                submitButton.innerHTML = '<i class="fas fa-save me-2"></i>Update Password';
                formStatus.innerHTML = '<i class="fas fa-exclamation-triangle text-warning me-1"></i>Failed to update password';
            });
        });
        
        // Auto-focus password field
        passwordInput.focus();
        <% } %>
    });
</script>
