<!-- Payment Setup Wizard Step Component -->
<!-- Professional UI with modern design patterns -->

<div class="wizard-step payment-setup-step">
  <!-- Step Header -->
  <div class="step-header">
    <div class="step-icon">
      <i class="fas fa-credit-card text-primary"></i>
    </div>
    <div class="step-info">
      <h3 class="step-title">Payment Configuration</h3>
      <p class="step-description">Configure payment gateways and methods for your institution</p>
    </div>
  </div>

  <!-- Payment Configuration Form -->
  <form id="paymentSetupForm" class="payment-setup-form">
    <!-- Online Payments Toggle -->
    <div class="form-section">
      <div class="section-header">
        <h4 class="section-title">
          <i class="fas fa-globe mr-2"></i>
          Online Payments
        </h4>
        <p class="section-description">Enable online payment collection for fees</p>
      </div>

      <div class="form-group">
        <div class="toggle-switch">
          <input
            type="checkbox"
            id="enableOnlinePayments"
            name="enable_online_payments"
            class="toggle-input"
          />
          <label for="enableOnlinePayments" class="toggle-label">
            <span class="toggle-slider"></span>
            <span class="toggle-text">Enable Online Payments</span>
          </label>
        </div>
        <small class="form-help"
          >Allow parents and students to pay fees online through secure payment gateways</small
        >
      </div>
    </div>

    <!-- Payment Gateways Selection -->
    <div class="form-section" id="gatewaySection" style="display: none">
      <div class="section-header">
        <h4 class="section-title">
          <i class="fas fa-university mr-2"></i>
          Payment Gateways
        </h4>
        <p class="section-description">Select and configure payment gateways</p>
      </div>

      <!-- Gateway Selection Grid -->
      <div class="gateway-grid">
        <div class="gateway-card" data-gateway="RAZORPAY">
          <div class="gateway-header">
            <input
              type="checkbox"
              id="razorpay"
              name="enabled_gateways"
              value="RAZORPAY"
              class="gateway-checkbox"
            />
            <label for="razorpay" class="gateway-label">
              <div class="gateway-icon">
                <img
                  src="/assets/images/gateways/razorpay.png"
                  alt="Razorpay"
                  class="gateway-logo"
                />
              </div>
              <div class="gateway-info">
                <h5 class="gateway-name">Razorpay</h5>
                <p class="gateway-description">Popular payment gateway with UPI, Cards, Wallets</p>
                <div class="gateway-features">
                  <span class="feature-tag">UPI</span>
                  <span class="feature-tag">Cards</span>
                  <span class="feature-tag">Wallets</span>
                </div>
              </div>
            </label>
          </div>

          <!-- Razorpay Configuration -->
          <div class="gateway-config" id="razorpayConfig" style="display: none">
            <div class="config-grid">
              <div class="form-group">
                <label for="razorpayKeyId" class="form-label">
                  <i class="fas fa-key mr-1"></i>
                  Key ID
                </label>
                <input
                  type="text"
                  id="razorpayKeyId"
                  name="razorpay_key_id"
                  class="form-control"
                  placeholder="rzp_test_xxxxxxxxxx"
                  pattern="^rzp_(test|live)_[A-Za-z0-9]{10}$"
                />
                <div class="form-feedback"></div>
              </div>

              <div class="form-group">
                <label for="razorpayKeySecret" class="form-label">
                  <i class="fas fa-lock mr-1"></i>
                  Key Secret
                </label>
                <div class="input-group">
                  <input
                    type="password"
                    id="razorpayKeySecret"
                    name="razorpay_key_secret"
                    class="form-control"
                    placeholder="Enter secret key"
                  />
                  <button type="button" class="btn btn-outline-secondary toggle-password">
                    <i class="fas fa-eye"></i>
                  </button>
                </div>
                <div class="form-feedback"></div>
              </div>
            </div>

            <div class="form-group">
              <div class="checkbox-group">
                <input type="checkbox" id="razorpayTestMode" name="razorpay_test_mode" checked />
                <label for="razorpayTestMode" class="checkbox-label">
                  <i class="fas fa-flask mr-1"></i>
                  Test Mode (Recommended for initial setup)
                </label>
              </div>
            </div>

            <div class="gateway-help">
              <div class="help-item">
                <i class="fas fa-info-circle text-info"></i>
                <span
                  >Get your API keys from
                  <a href="https://dashboard.razorpay.com/app/keys" target="_blank"
                    >Razorpay Dashboard</a
                  ></span
                >
              </div>
            </div>
          </div>
        </div>

        <div class="gateway-card" data-gateway="PAYTM">
          <div class="gateway-header">
            <input
              type="checkbox"
              id="paytm"
              name="enabled_gateways"
              value="PAYTM"
              class="gateway-checkbox"
            />
            <label for="paytm" class="gateway-label">
              <div class="gateway-icon">
                <img src="/assets/images/gateways/paytm.png" alt="Paytm" class="gateway-logo" />
              </div>
              <div class="gateway-info">
                <h5 class="gateway-name">Paytm</h5>
                <p class="gateway-description">Leading digital wallet and payment gateway</p>
                <div class="gateway-features">
                  <span class="feature-tag">Wallet</span>
                  <span class="feature-tag">UPI</span>
                  <span class="feature-tag">NetBanking</span>
                </div>
              </div>
            </label>
          </div>

          <!-- Paytm Configuration -->
          <div class="gateway-config" id="paytmConfig" style="display: none">
            <div class="config-grid">
              <div class="form-group">
                <label for="paytmMerchantId" class="form-label">
                  <i class="fas fa-store mr-1"></i>
                  Merchant ID
                </label>
                <input
                  type="text"
                  id="paytmMerchantId"
                  name="paytm_merchant_id"
                  class="form-control"
                  placeholder="Enter Merchant ID"
                />
                <div class="form-feedback"></div>
              </div>

              <div class="form-group">
                <label for="paytmMerchantKey" class="form-label">
                  <i class="fas fa-lock mr-1"></i>
                  Merchant Key
                </label>
                <div class="input-group">
                  <input
                    type="password"
                    id="paytmMerchantKey"
                    name="paytm_merchant_key"
                    class="form-control"
                    placeholder="Enter merchant key"
                  />
                  <button type="button" class="btn btn-outline-secondary toggle-password">
                    <i class="fas fa-eye"></i>
                  </button>
                </div>
                <div class="form-feedback"></div>
              </div>
            </div>

            <div class="form-group">
              <div class="checkbox-group">
                <input type="checkbox" id="paytmTestMode" name="paytm_test_mode" checked />
                <label for="paytmTestMode" class="checkbox-label">
                  <i class="fas fa-flask mr-1"></i>
                  Test Mode (Staging Environment)
                </label>
              </div>
            </div>

            <div class="gateway-help">
              <div class="help-item">
                <i class="fas fa-info-circle text-info"></i>
                <span
                  >Register at
                  <a href="https://business.paytm.com/" target="_blank">Paytm Business</a> to get
                  credentials</span
                >
              </div>
            </div>
          </div>
        </div>

        <div class="gateway-card" data-gateway="PAYU">
          <div class="gateway-header">
            <input
              type="checkbox"
              id="payu"
              name="enabled_gateways"
              value="PAYU"
              class="gateway-checkbox"
            />
            <label for="payu" class="gateway-label">
              <div class="gateway-icon">
                <img src="/assets/images/gateways/payu.png" alt="PayU" class="gateway-logo" />
              </div>
              <div class="gateway-info">
                <h5 class="gateway-name">PayU</h5>
                <p class="gateway-description">Comprehensive payment solutions</p>
                <div class="gateway-features">
                  <span class="feature-tag">Cards</span>
                  <span class="feature-tag">NetBanking</span>
                  <span class="feature-tag">EMI</span>
                </div>
              </div>
            </label>
          </div>

          <!-- PayU Configuration -->
          <div class="gateway-config" id="payuConfig" style="display: none">
            <div class="config-grid">
              <div class="form-group">
                <label for="payuMerchantKey" class="form-label">
                  <i class="fas fa-key mr-1"></i>
                  Merchant Key
                </label>
                <input
                  type="text"
                  id="payuMerchantKey"
                  name="payu_merchant_key"
                  class="form-control"
                  placeholder="Enter Merchant Key"
                />
                <div class="form-feedback"></div>
              </div>

              <div class="form-group">
                <label for="payuSalt" class="form-label">
                  <i class="fas fa-lock mr-1"></i>
                  Salt
                </label>
                <div class="input-group">
                  <input
                    type="password"
                    id="payuSalt"
                    name="payu_salt"
                    class="form-control"
                    placeholder="Enter salt"
                  />
                  <button type="button" class="btn btn-outline-secondary toggle-password">
                    <i class="fas fa-eye"></i>
                  </button>
                </div>
                <div class="form-feedback"></div>
              </div>
            </div>

            <div class="gateway-help">
              <div class="help-item">
                <i class="fas fa-info-circle text-info"></i>
                <span
                  >Get credentials from
                  <a href="https://payu.in/" target="_blank">PayU Merchant Dashboard</a></span
                >
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Payment Methods Configuration -->
    <div class="form-section">
      <div class="section-header">
        <h4 class="section-title">
          <i class="fas fa-money-bill-wave mr-2"></i>
          Payment Methods
        </h4>
        <p class="section-description">Enable payment methods for fee collection</p>
      </div>

      <div class="payment-methods-grid">
        <div class="method-card">
          <input
            type="checkbox"
            id="methodCash"
            name="enabled_payment_methods"
            value="CASH"
            checked
          />
          <label for="methodCash" class="method-label">
            <div class="method-icon">
              <i class="fas fa-money-bill-alt"></i>
            </div>
            <div class="method-info">
              <h6 class="method-name">Cash Payment</h6>
              <p class="method-description">Direct cash collection</p>
            </div>
          </label>
        </div>

        <div class="method-card">
          <input type="checkbox" id="methodCheque" name="enabled_payment_methods" value="CHEQUE" />
          <label for="methodCheque" class="method-label">
            <div class="method-icon">
              <i class="fas fa-money-check"></i>
            </div>
            <div class="method-info">
              <h6 class="method-name">Cheque Payment</h6>
              <p class="method-description">Bank cheque collection</p>
            </div>
          </label>
        </div>

        <div class="method-card">
          <input type="checkbox" id="methodUPI" name="enabled_payment_methods" value="UPI" />
          <label for="methodUPI" class="method-label">
            <div class="method-icon">
              <i class="fas fa-mobile-alt"></i>
            </div>
            <div class="method-info">
              <h6 class="method-name">UPI Payment</h6>
              <p class="method-description">Unified Payment Interface</p>
            </div>
          </label>
        </div>

        <div class="method-card">
          <input
            type="checkbox"
            id="methodOnline"
            name="enabled_payment_methods"
            value="ONLINE"
            checked
          />
          <label for="methodOnline" class="method-label">
            <div class="method-icon">
              <i class="fas fa-globe"></i>
            </div>
            <div class="method-info">
              <h6 class="method-name">Online Payment</h6>
              <p class="method-description">Gateway-based payments</p>
            </div>
          </label>
        </div>

        <div class="method-card">
          <input type="checkbox" id="methodCard" name="enabled_payment_methods" value="CARD" />
          <label for="methodCard" class="method-label">
            <div class="method-icon">
              <i class="fas fa-credit-card"></i>
            </div>
            <div class="method-info">
              <h6 class="method-name">Card Payment</h6>
              <p class="method-description">Credit/Debit cards</p>
            </div>
          </label>
        </div>

        <div class="method-card">
          <input
            type="checkbox"
            id="methodBankTransfer"
            name="enabled_payment_methods"
            value="BANK_TRANSFER"
          />
          <label for="methodBankTransfer" class="method-label">
            <div class="method-icon">
              <i class="fas fa-university"></i>
            </div>
            <div class="method-info">
              <h6 class="method-name">Bank Transfer</h6>
              <p class="method-description">Direct bank transfers</p>
            </div>
          </label>
        </div>
      </div>
    </div>

    <!-- Convenience Fee Configuration -->
    <div class="form-section" id="convenienceFeeSection" style="display: none">
      <div class="section-header">
        <h4 class="section-title">
          <i class="fas fa-percentage mr-2"></i>
          Convenience Fee
        </h4>
        <p class="section-description">Configure additional charges for online payments</p>
      </div>

      <div class="fee-config-grid">
        <div class="form-group">
          <label for="onlineFeePercentage" class="form-label">
            <i class="fas fa-percent mr-1"></i>
            Percentage Fee (%)
          </label>
          <div class="input-group">
            <input
              type="number"
              id="onlineFeePercentage"
              name="online_fee_percentage"
              class="form-control"
              min="0"
              max="10"
              step="0.01"
              value="0"
            />
            <span class="input-group-text">%</span>
          </div>
          <small class="form-help">Percentage of transaction amount (0-10%)</small>
        </div>

        <div class="form-group">
          <label for="onlineFeeFixed" class="form-label">
            <i class="fas fa-rupee-sign mr-1"></i>
            Fixed Fee (₹)
          </label>
          <div class="input-group">
            <span class="input-group-text">₹</span>
            <input
              type="number"
              id="onlineFeeFixed"
              name="online_fee_fixed"
              class="form-control"
              min="0"
              step="0.01"
              value="0"
            />
          </div>
          <small class="form-help">Fixed amount per transaction</small>
        </div>
      </div>

      <div class="fee-preview">
        <div class="preview-card">
          <h6 class="preview-title">Fee Calculation Preview</h6>
          <div class="preview-example">
            <div class="example-row">
              <span class="example-label">Payment Amount:</span>
              <span class="example-value">₹1,000</span>
            </div>
            <div class="example-row">
              <span class="example-label"
                >Percentage Fee (<span id="previewPercentage">0</span>%):</span
              >
              <span class="example-value">₹<span id="previewPercentageAmount">0</span></span>
            </div>
            <div class="example-row">
              <span class="example-label">Fixed Fee:</span>
              <span class="example-value">₹<span id="previewFixedAmount">0</span></span>
            </div>
            <div class="example-row total">
              <span class="example-label">Total Amount:</span>
              <span class="example-value">₹<span id="previewTotalAmount">1,000</span></span>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Test Configuration -->
    <div class="form-section" id="testSection" style="display: none">
      <div class="section-header">
        <h4 class="section-title">
          <i class="fas fa-vial mr-2"></i>
          Test Configuration
        </h4>
        <p class="section-description">Test your payment gateway configuration</p>
      </div>

      <div class="test-controls">
        <button type="button" id="testGatewayBtn" class="btn btn-outline-primary">
          <i class="fas fa-play mr-2"></i>
          Test Payment Gateway
        </button>
        <div class="test-status" id="testStatus" style="display: none">
          <div class="test-result">
            <i class="fas fa-spinner fa-spin"></i>
            <span class="test-message">Testing gateway connection...</span>
          </div>
        </div>
      </div>
    </div>
  </form>

  <!-- Step Actions -->
  <div class="step-actions">
    <button type="button" class="btn btn-secondary" id="prevStepBtn">
      <i class="fas fa-arrow-left mr-2"></i>
      Previous
    </button>
    <button type="button" class="btn btn-primary" id="nextStepBtn">
      Next
      <i class="fas fa-arrow-right ml-2"></i>
    </button>
    <button type="button" class="btn btn-outline-secondary" id="skipStepBtn">Skip for now</button>
  </div>
</div>

<style>
  /* Payment Setup Step Styles */
  .payment-setup-step {
    max-width: 800px;
    margin: 0 auto;
  }

  .step-header {
    display: flex;
    align-items: center;
    margin-bottom: 2rem;
    padding: 1.5rem;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    border-radius: 12px;
    color: white;
  }

  .step-icon {
    font-size: 2.5rem;
    margin-right: 1rem;
  }

  .step-title {
    margin: 0 0 0.5rem 0;
    font-size: 1.5rem;
    font-weight: 600;
  }

  .step-description {
    margin: 0;
    opacity: 0.9;
  }

  .form-section {
    margin-bottom: 2.5rem;
    padding: 1.5rem;
    background: white;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }

  .section-header {
    margin-bottom: 1.5rem;
    padding-bottom: 1rem;
    border-bottom: 2px solid #f1f5f9;
  }

  .section-title {
    margin: 0 0 0.5rem 0;
    color: #1e293b;
    font-size: 1.2rem;
    font-weight: 600;
  }

  .section-description {
    margin: 0;
    color: #64748b;
    font-size: 0.9rem;
  }

  /* Toggle Switch */
  .toggle-switch {
    display: flex;
    align-items: center;
    margin-bottom: 0.5rem;
  }

  .toggle-input {
    display: none;
  }

  .toggle-label {
    display: flex;
    align-items: center;
    cursor: pointer;
    font-weight: 500;
  }

  .toggle-slider {
    width: 48px;
    height: 24px;
    background: #cbd5e1;
    border-radius: 24px;
    margin-right: 0.75rem;
    position: relative;
    transition: background 0.3s ease;
  }

  .toggle-slider::before {
    content: '';
    width: 20px;
    height: 20px;
    background: white;
    border-radius: 50%;
    position: absolute;
    top: 2px;
    left: 2px;
    transition: transform 0.3s ease;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
  }

  .toggle-input:checked + .toggle-label .toggle-slider {
    background: #3b82f6;
  }

  .toggle-input:checked + .toggle-label .toggle-slider::before {
    transform: translateX(24px);
  }

  /* Gateway Grid */
  .gateway-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 1.5rem;
  }

  .gateway-card {
    border: 2px solid #e2e8f0;
    border-radius: 8px;
    overflow: hidden;
    transition: all 0.3s ease;
  }

  .gateway-card:hover {
    border-color: #3b82f6;
    box-shadow: 0 4px 12px rgba(59, 130, 246, 0.15);
  }

  .gateway-checkbox {
    display: none;
  }

  .gateway-checkbox:checked + .gateway-label {
    background: #eff6ff;
    border-color: #3b82f6;
  }

  .gateway-label {
    display: block;
    padding: 1.5rem;
    cursor: pointer;
    border: 1px solid transparent;
    transition: all 0.3s ease;
  }

  .gateway-header {
    position: relative;
  }

  .gateway-header::before {
    content: '';
    width: 20px;
    height: 20px;
    border: 2px solid #cbd5e1;
    border-radius: 4px;
    position: absolute;
    top: 1rem;
    right: 1rem;
    transition: all 0.3s ease;
  }

  .gateway-checkbox:checked + .gateway-label .gateway-header::before {
    background: #3b82f6;
    border-color: #3b82f6;
  }

  .gateway-checkbox:checked + .gateway-label .gateway-header::after {
    content: '✓';
    color: white;
    font-size: 12px;
    position: absolute;
    top: 1.15rem;
    right: 1.25rem;
  }

  .gateway-icon {
    margin-bottom: 1rem;
  }

  .gateway-logo {
    height: 40px;
    object-fit: contain;
  }

  .gateway-name {
    margin: 0 0 0.5rem 0;
    font-size: 1.1rem;
    font-weight: 600;
    color: #1e293b;
  }

  .gateway-description {
    margin: 0 0 1rem 0;
    color: #64748b;
    font-size: 0.9rem;
  }

  .gateway-features {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  .feature-tag {
    padding: 0.25rem 0.5rem;
    background: #f1f5f9;
    color: #475569;
    border-radius: 4px;
    font-size: 0.75rem;
    font-weight: 500;
  }

  .gateway-config {
    padding: 1.5rem;
    background: #f8fafc;
    border-top: 1px solid #e2e8f0;
  }

  .config-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 1rem;
    margin-bottom: 1rem;
  }

  .gateway-help {
    margin-top: 1rem;
    padding: 1rem;
    background: #eff6ff;
    border-radius: 6px;
  }

  .help-item {
    display: flex;
    align-items: center;
    font-size: 0.9rem;
    color: #1e40af;
  }

  .help-item i {
    margin-right: 0.5rem;
  }

  /* Payment Methods Grid */
  .payment-methods-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 1rem;
  }

  .method-card {
    border: 2px solid #e2e8f0;
    border-radius: 8px;
    overflow: hidden;
    transition: all 0.3s ease;
  }

  .method-card:hover {
    border-color: #3b82f6;
  }

  .method-card input[type='checkbox'] {
    display: none;
  }

  .method-card input[type='checkbox']:checked + .method-label {
    background: #eff6ff;
    border-color: #3b82f6;
  }

  .method-label {
    display: block;
    padding: 1.5rem 1rem;
    cursor: pointer;
    text-align: center;
    border: 1px solid transparent;
    transition: all 0.3s ease;
  }

  .method-icon {
    font-size: 2rem;
    color: #3b82f6;
    margin-bottom: 0.75rem;
  }

  .method-name {
    margin: 0 0 0.25rem 0;
    font-weight: 600;
    color: #1e293b;
  }

  .method-description {
    margin: 0;
    font-size: 0.85rem;
    color: #64748b;
  }

  /* Fee Configuration */
  .fee-config-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 1.5rem;
    margin-bottom: 1.5rem;
  }

  .fee-preview {
    margin-top: 1rem;
  }

  .preview-card {
    padding: 1.5rem;
    background: #f8fafc;
    border-radius: 8px;
    border: 1px solid #e2e8f0;
  }

  .preview-title {
    margin: 0 0 1rem 0;
    font-weight: 600;
    color: #1e293b;
  }

  .preview-example {
    space-y: 0.5rem;
  }

  .example-row {
    display: flex;
    justify-content: space-between;
    padding: 0.5rem 0;
  }

  .example-row.total {
    border-top: 1px solid #cbd5e1;
    margin-top: 0.5rem;
    font-weight: 600;
    color: #059669;
  }

  /* Test Section */
  .test-controls {
    text-align: center;
  }

  .test-result {
    display: flex;
    align-items: center;
    justify-content: center;
    margin-top: 1rem;
    padding: 1rem;
    background: #f0f9ff;
    border-radius: 6px;
  }

  .test-message {
    margin-left: 0.5rem;
    color: #0369a1;
  }

  /* Step Actions */
  .step-actions {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-top: 2rem;
    padding: 1.5rem;
    background: #f8fafc;
    border-radius: 8px;
  }

  .step-actions .btn {
    min-width: 120px;
  }

  /* Form Controls */
  .form-group {
    margin-bottom: 1rem;
  }

  .form-label {
    display: block;
    margin-bottom: 0.5rem;
    font-weight: 500;
    color: #374151;
  }

  .form-control {
    width: 100%;
    padding: 0.75rem;
    border: 1px solid #d1d5db;
    border-radius: 6px;
    font-size: 0.9rem;
    transition:
      border-color 0.3s ease,
      box-shadow 0.3s ease;
  }

  .form-control:focus {
    outline: none;
    border-color: #3b82f6;
    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
  }

  .form-help {
    display: block;
    margin-top: 0.25rem;
    font-size: 0.8rem;
    color: #6b7280;
  }

  .form-feedback {
    margin-top: 0.25rem;
    font-size: 0.85rem;
  }

  .input-group {
    display: flex;
  }

  .input-group .form-control {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }

  .input-group-text {
    padding: 0.75rem;
    background: #f9fafb;
    border: 1px solid #d1d5db;
    border-left: none;
    border-top-right-radius: 6px;
    border-bottom-right-radius: 6px;
    font-size: 0.9rem;
    color: #6b7280;
  }

  .checkbox-group {
    display: flex;
    align-items: center;
  }

  .checkbox-label {
    display: flex;
    align-items: center;
    cursor: pointer;
    font-weight: 500;
    color: #374151;
  }

  .checkbox-label input[type='checkbox'] {
    margin-right: 0.5rem;
  }

  /* Responsive Design */
  @media (max-width: 768px) {
    .config-grid,
    .fee-config-grid {
      grid-template-columns: 1fr;
    }

    .step-actions {
      flex-direction: column;
      gap: 1rem;
    }

    .step-actions .btn {
      width: 100%;
    }

    .gateway-grid {
      grid-template-columns: 1fr;
    }

    .payment-methods-grid {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  @media (max-width: 480px) {
    .payment-methods-grid {
      grid-template-columns: 1fr;
    }

    .step-header {
      flex-direction: column;
      text-align: center;
    }

    .step-icon {
      margin-right: 0;
      margin-bottom: 1rem;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const paymentSetupStep = {
      init() {
        this.bindEvents();
        this.updateVisibility();
        this.initFeeCalculator();
      },

      bindEvents() {
        // Online payments toggle
        document.getElementById('enableOnlinePayments').addEventListener('change', e => {
          this.toggleOnlinePayments(e.target.checked);
        });

        // Gateway checkboxes
        document.querySelectorAll('.gateway-checkbox').forEach(checkbox => {
          checkbox.addEventListener('change', e => {
            this.toggleGatewayConfig(e.target.value, e.target.checked);
          });
        });

        // Payment method checkboxes
        document.querySelectorAll('input[name="enabled_payment_methods"]').forEach(checkbox => {
          checkbox.addEventListener('change', () => {
            this.updatePaymentMethods();
          });
        });

        // Fee calculation inputs
        document.getElementById('onlineFeePercentage').addEventListener('input', () => {
          this.updateFeePreview();
        });

        document.getElementById('onlineFeeFixed').addEventListener('input', () => {
          this.updateFeePreview();
        });

        // Password toggle buttons
        document.querySelectorAll('.toggle-password').forEach(btn => {
          btn.addEventListener('click', e => {
            this.togglePasswordVisibility(e.target.closest('.input-group'));
          });
        });

        // Test gateway button
        document.getElementById('testGatewayBtn').addEventListener('click', () => {
          this.testGatewayConnection();
        });

        // Step navigation
        document.getElementById('nextStepBtn').addEventListener('click', () => {
          this.validateAndProceed();
        });

        document.getElementById('prevStepBtn').addEventListener('click', () => {
          this.goToPreviousStep();
        });

        document.getElementById('skipStepBtn').addEventListener('click', () => {
          this.skipStep();
        });
      },

      toggleOnlinePayments(enabled) {
        const gatewaySection = document.getElementById('gatewaySection');
        const convenienceFeeSection = document.getElementById('convenienceFeeSection');
        const testSection = document.getElementById('testSection');

        if (enabled) {
          gatewaySection.style.display = 'block';
          convenienceFeeSection.style.display = 'block';
          testSection.style.display = 'block';
        } else {
          gatewaySection.style.display = 'none';
          convenienceFeeSection.style.display = 'none';
          testSection.style.display = 'none';

          // Uncheck all gateways
          document.querySelectorAll('.gateway-checkbox').forEach(checkbox => {
            checkbox.checked = false;
          });

          // Hide all gateway configs
          document.querySelectorAll('.gateway-config').forEach(config => {
            config.style.display = 'none';
          });
        }
      },

      toggleGatewayConfig(gateway, enabled) {
        const configSection = document.getElementById(`${gateway.toLowerCase()}Config`);
        if (configSection) {
          configSection.style.display = enabled ? 'block' : 'none';
        }
      },

      updatePaymentMethods() {
        const onlineMethodChecked = document.getElementById('methodOnline').checked;
        const convenienceFeeSection = document.getElementById('convenienceFeeSection');

        if (onlineMethodChecked) {
          convenienceFeeSection.style.display = 'block';
        }
      },

      initFeeCalculator() {
        this.updateFeePreview();
      },

      updateFeePreview() {
        const percentage = parseFloat(document.getElementById('onlineFeePercentage').value) || 0;
        const fixed = parseFloat(document.getElementById('onlineFeeFixed').value) || 0;
        const baseAmount = 1000; // Example amount

        const percentageAmount = (baseAmount * percentage) / 100;
        const totalAmount = baseAmount + percentageAmount + fixed;

        document.getElementById('previewPercentage').textContent = percentage;
        document.getElementById('previewPercentageAmount').textContent =
          percentageAmount.toFixed(2);
        document.getElementById('previewFixedAmount').textContent = fixed.toFixed(2);
        document.getElementById('previewTotalAmount').textContent = totalAmount.toFixed(2);
      },

      togglePasswordVisibility(inputGroup) {
        const input = inputGroup.querySelector('input');
        const icon = inputGroup.querySelector('i');

        if (input.type === 'password') {
          input.type = 'text';
          icon.className = 'fas fa-eye-slash';
        } else {
          input.type = 'password';
          icon.className = 'fas fa-eye';
        }
      },

      async testGatewayConnection() {
        const testBtn = document.getElementById('testGatewayBtn');
        const testStatus = document.getElementById('testStatus');
        const testMessage = testStatus.querySelector('.test-message');

        // Show loading state
        testBtn.disabled = true;
        testStatus.style.display = 'block';
        testMessage.innerHTML =
          '<i class="fas fa-spinner fa-spin mr-2"></i>Testing gateway connection...';

        try {
          // Get selected gateways
          const selectedGateways = Array.from(
            document.querySelectorAll('.gateway-checkbox:checked')
          ).map(cb => cb.value);

          if (selectedGateways.length === 0) {
            throw new Error('Please select at least one payment gateway');
          }

          // Simulate API call to test gateway
          await new Promise(resolve => setTimeout(resolve, 2000));

          // Show success
          testMessage.innerHTML =
            '<i class="fas fa-check-circle text-success mr-2"></i>Gateway connection successful!';

          setTimeout(() => {
            testStatus.style.display = 'none';
            testBtn.disabled = false;
          }, 3000);
        } catch (error) {
          testMessage.innerHTML = `<i class="fas fa-exclamation-triangle text-danger mr-2"></i>${error.message}`;
          testBtn.disabled = false;
        }
      },

      validateAndProceed() {
        const formData = this.getFormData();

        // Validate required fields
        const errors = this.validateForm(formData);

        if (errors.length > 0) {
          this.showValidationErrors(errors);
          return;
        }

        // Save data and proceed
        this.saveStepData(formData);
        this.goToNextStep();
      },

      getFormData() {
        const form = document.getElementById('paymentSetupForm');
        const formData = new FormData(form);
        const data = {};

        // Convert FormData to object
        for (let [key, value] of formData.entries()) {
          if (data[key]) {
            if (!Array.isArray(data[key])) {
              data[key] = [data[key]];
            }
            data[key].push(value);
          } else {
            data[key] = value;
          }
        }

        return data;
      },

      validateForm(data) {
        const errors = [];

        if (data.enable_online_payments) {
          if (!data.enabled_gateways || data.enabled_gateways.length === 0) {
            errors.push('Please select at least one payment gateway');
          }

          // Validate gateway configurations
          if (data.enabled_gateways && data.enabled_gateways.includes('RAZORPAY')) {
            if (!data.razorpay_key_id) {
              errors.push('Razorpay Key ID is required');
            }
            if (!data.razorpay_key_secret) {
              errors.push('Razorpay Key Secret is required');
            }
          }

          if (data.enabled_gateways && data.enabled_gateways.includes('PAYTM')) {
            if (!data.paytm_merchant_id) {
              errors.push('Paytm Merchant ID is required');
            }
            if (!data.paytm_merchant_key) {
              errors.push('Paytm Merchant Key is required');
            }
          }
        }

        if (!data.enabled_payment_methods || data.enabled_payment_methods.length === 0) {
          errors.push('Please select at least one payment method');
        }

        return errors;
      },

      showValidationErrors(errors) {
        // Create or update error notification
        let errorDiv = document.querySelector('.validation-errors');
        if (!errorDiv) {
          errorDiv = document.createElement('div');
          errorDiv.className = 'validation-errors alert alert-danger';
          document
            .querySelector('.payment-setup-step')
            .insertBefore(errorDiv, document.querySelector('.form-section'));
        }

        errorDiv.innerHTML = `
        <h6><i class="fas fa-exclamation-triangle mr-2"></i>Please fix the following errors:</h6>
        <ul class="mb-0">
          ${errors.map(error => `<li>${error}</li>`).join('')}
        </ul>
      `;

        // Scroll to errors
        errorDiv.scrollIntoView({ behavior: 'smooth', block: 'center' });
      },

      saveStepData(data) {
        // Save to wizard session
        if (window.wizardEngine) {
          window.wizardEngine.saveStepData('payment_setup', data);
        }
      },

      goToNextStep() {
        if (window.wizardEngine) {
          window.wizardEngine.nextStep();
        }
      },

      goToPreviousStep() {
        if (window.wizardEngine) {
          window.wizardEngine.previousStep();
        }
      },

      skipStep() {
        if (window.wizardEngine) {
          window.wizardEngine.skipStep();
        }
      },

      updateVisibility() {
        // Initial visibility based on current state
        const onlinePaymentsEnabled = document.getElementById('enableOnlinePayments').checked;
        this.toggleOnlinePayments(onlinePaymentsEnabled);
      }
    };

    // Initialize the payment setup step
    paymentSetupStep.init();
  });
</script>
