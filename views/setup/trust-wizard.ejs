<!-- Trust setup wizard uses layouts/main layout automatically -->

<!-- Trust Setup Wizard -->
<div class="wizard-container">
  <!-- Wizard Header -->
  <div class="wizard-header mb-8">
    <div class="flex items-center justify-between">
      <div>
        <h1 class="text-3xl font-bold text-primary">Trust Setup Wizard</h1>
        <p class="text-muted mt-2">Complete the setup of your educational trust</p>
      </div>
      <div class="wizard-progress">
        <div class="flex items-center gap-2">
          <span class="text-sm text-muted">Step</span>
          <span class="font-bold text-primary" id="currentStep">1</span>
          <span class="text-muted">of</span>
          <span class="font-bold" id="totalSteps">5</span>
        </div>
      </div>
    </div>
  </div>

  <!-- Progress Bar -->
  <div class="wizard-progress-bar mb-8">
    <div class="bg-surface rounded-lg p-1">
      <div class="bg-primary h-2 rounded transition-all duration-300" id="progressBar" style="width: 20%"></div>
    </div>
  </div>

  <!-- Wizard Steps -->
  <div class="wizard-steps-nav mb-8">
    <div class="flex items-center justify-center">
      <div class="step-item active" data-step="1">
        <div class="step-circle">
          <i class="fas fa-building"></i>
        </div>
        <span class="step-label">Basic Info</span>
      </div>
      <div class="step-connector"></div>
      <div class="step-item" data-step="2">
        <div class="step-circle">
          <i class="fas fa-map-marker-alt"></i>
        </div>
        <span class="step-label">Address</span>
      </div>
      <div class="step-connector"></div>
      <div class="step-item" data-step="3">
        <div class="step-circle">
          <i class="fas fa-user-tie"></i>
        </div>
        <span class="step-label">Contact Person</span>
      </div>
      <div class="step-connector"></div>
      <div class="step-item" data-step="4">
        <div class="step-circle">
          <i class="fas fa-cogs"></i>
        </div>
        <span class="step-label">Configuration</span>
      </div>
      <div class="step-connector"></div>
      <div class="step-item" data-step="5">
        <div class="step-circle">
          <i class="fas fa-check"></i>
        </div>
        <span class="step-label">Review</span>
      </div>
    </div>
  </div>

  <!-- Wizard Form -->
  <form id="trustWizardForm" data-autosave="true">
    <!-- Step 1: Basic Information -->
    <div class="wizard-step active" data-step="1">
      <div class="card">
        <div class="card-header">
          <h3 class="font-semibold">Basic Trust Information</h3>
          <p class="text-muted text-sm">Enter the fundamental details about your trust</p>
        </div>
        <div class="card-body">
          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div class="form-group">
              <label class="form-label required">Trust Name</label>
              <input type="text" name="trust_name" class="form-input" required 
                     placeholder="Enter trust name">
              <small class="form-help">Full legal name of the trust</small>
            </div>

            <div class="form-group">
              <label class="form-label required">Trust Code</label>
              <input type="text" name="trust_code" class="form-input" required 
                     placeholder="Enter unique trust code" maxlength="10">
              <small class="form-help">Unique identifier for the trust (e.g., ABC123)</small>
            </div>

            <div class="form-group">
              <label class="form-label required">Registration Number</label>
              <input type="text" name="registration_number" class="form-input" required 
                     placeholder="Enter registration number">
            </div>

            <div class="form-group">
              <label class="form-label required">Registration Date</label>
              <input type="date" name="registration_date" class="form-input" required>
            </div>

            <div class="form-group">
              <label class="form-label required">Trust Type</label>
              <select name="trust_type" class="form-select" required>
                <option value="">Select trust type</option>
                <option value="EDUCATIONAL">Educational Trust</option>
                <option value="CHARITABLE">Charitable Trust</option>
                <option value="RELIGIOUS">Religious Trust</option>
                <option value="MIXED">Mixed Purpose Trust</option>
              </select>
            </div>

            <div class="form-group">
              <label class="form-label required">PAN Number</label>
              <input type="text" name="pan_number" class="form-input" required 
                     placeholder="Enter PAN number" maxlength="10">
            </div>

            <div class="form-group md:col-span-2">
              <label class="form-label">Description</label>
              <textarea name="description" class="form-textarea" rows="3" 
                        placeholder="Brief description of the trust and its objectives"></textarea>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Step 2: Address Information -->
    <div class="wizard-step" data-step="2">
      <div class="card">
        <div class="card-header">
          <h3 class="font-semibold">Trust Address</h3>
          <p class="text-muted text-sm">Provide the registered address of the trust</p>
        </div>
        <div class="card-body">
          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div class="form-group md:col-span-2">
              <label class="form-label required">Address Line 1</label>
              <input type="text" name="address_line1" class="form-input" required 
                     placeholder="Building/House number, Street name">
            </div>

            <div class="form-group md:col-span-2">
              <label class="form-label">Address Line 2</label>
              <input type="text" name="address_line2" class="form-input" 
                     placeholder="Area, Landmark (optional)">
            </div>

            <div class="form-group">
              <label class="form-label required">City</label>
              <input type="text" name="city" class="form-input" required placeholder="Enter city">
            </div>

            <div class="form-group">
              <label class="form-label required">State</label>
              <select name="state" class="form-select" required>
                <option value="">Select state</option>
                <option value="ANDHRA_PRADESH">Andhra Pradesh</option>
                <option value="KARNATAKA">Karnataka</option>
                <option value="TAMIL_NADU">Tamil Nadu</option>
                <option value="TELANGANA">Telangana</option>
                <!-- Add more states as needed -->
              </select>
            </div>

            <div class="form-group">
              <label class="form-label required">PIN Code</label>
              <input type="text" name="pincode" class="form-input" required 
                     placeholder="Enter PIN code" maxlength="6">
            </div>

            <div class="form-group">
              <label class="form-label">District</label>
              <input type="text" name="district" class="form-input" placeholder="Enter district">
            </div>

            <div class="form-group">
              <label class="form-label">Phone</label>
              <input type="tel" name="phone" class="form-input" placeholder="Enter phone number">
            </div>

            <div class="form-group">
              <label class="form-label">Email</label>
              <input type="email" name="email" class="form-input" placeholder="Enter email address">
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Step 3: Contact Person -->
    <div class="wizard-step" data-step="3">
      <div class="card">
        <div class="card-header">
          <h3 class="font-semibold">Primary Contact Person</h3>
          <p class="text-muted text-sm">Details of the main contact person for the trust</p>
        </div>
        <div class="card-body">
          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div class="form-group">
              <label class="form-label required">Full Name</label>
              <input type="text" name="contact_person_name" class="form-input" required 
                     placeholder="Enter full name">
            </div>

            <div class="form-group">
              <label class="form-label required">Designation</label>
              <input type="text" name="contact_person_designation" class="form-input" required 
                     placeholder="e.g., Secretary, Chairman">
            </div>

            <div class="form-group">
              <label class="form-label required">Mobile</label>
              <input type="tel" name="contact_person_mobile" class="form-input" required 
                     placeholder="Enter mobile number">
            </div>

            <div class="form-group">
              <label class="form-label required">Email</label>
              <input type="email" name="contact_person_email" class="form-input" required 
                     placeholder="Enter email address">
            </div>

            <div class="form-group">
              <label class="form-label">Alternate Phone</label>
              <input type="tel" name="contact_person_phone" class="form-input" 
                     placeholder="Enter alternate phone number">
            </div>

            <div class="form-group">
              <label class="form-label">PAN Number</label>
              <input type="text" name="contact_person_pan" class="form-input" 
                     placeholder="Enter PAN number" maxlength="10">
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Step 4: Configuration -->
    <div class="wizard-step" data-step="4">
      <div class="card">
        <div class="card-header">
          <h3 class="font-semibold">Trust Configuration</h3>
          <p class="text-muted text-sm">Configure system settings for the trust</p>
        </div>
        <div class="card-body">
          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div class="form-group">
              <label class="form-label required">Academic Year Start Month</label>
              <select name="academic_year_start" class="form-select" required>
                <option value="APRIL">April</option>
                <option value="JUNE">June</option>
                <option value="JANUARY">January</option>
              </select>
            </div>

            <div class="form-group">
              <label class="form-label required">Theme Color</label>
              <select name="theme_color" class="form-select" required>
                <option value="blue">Blue</option>
                <option value="green">Green</option>
                <option value="purple">Purple</option>
                <option value="red">Red</option>
                <option value="orange">Orange</option>
              </select>
            </div>

            <div class="form-group">
              <label class="form-label">Logo</label>
              <input type="file" name="logo" class="form-input" accept="image/*">
              <small class="form-help">Upload trust logo (optional)</small>
            </div>

            <div class="form-group">
              <label class="form-label">Website</label>
              <input type="url" name="website" class="form-input" placeholder="https://example.com">
            </div>

            <div class="form-group md:col-span-2">
              <label class="form-label">Features</label>
              <div class="grid grid-cols-2 md:grid-cols-3 gap-4">
                <label class="flex items-center gap-2">
                  <input type="checkbox" name="features" value="STUDENT_MANAGEMENT" checked>
                  <span>Student Management</span>
                </label>
                <label class="flex items-center gap-2">
                  <input type="checkbox" name="features" value="FEE_MANAGEMENT" checked>
                  <span>Fee Management</span>
                </label>
                <label class="flex items-center gap-2">
                  <input type="checkbox" name="features" value="ATTENDANCE" checked>
                  <span>Attendance</span>
                </label>
                <label class="flex items-center gap-2">
                  <input type="checkbox" name="features" value="COMMUNICATION">
                  <span>Communication</span>
                </label>
                <label class="flex items-center gap-2">
                  <input type="checkbox" name="features" value="REPORTS" checked>
                  <span>Reports</span>
                </label>
                <label class="flex items-center gap-2">
                  <input type="checkbox" name="features" value="TRANSPORT">
                  <span>Transport</span>
                </label>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Step 5: Review -->
    <div class="wizard-step" data-step="5">
      <div class="card">
        <div class="card-header">
          <h3 class="font-semibold">Review and Confirm</h3>
          <p class="text-muted text-sm">Please review all information before submitting</p>
        </div>
        <div class="card-body">
          <div id="reviewContent">
            <!-- Review content will be populated by JavaScript -->
          </div>
        </div>
      </div>
    </div>
  </form>

  <!-- Navigation Buttons -->
  <div class="wizard-navigation mt-8">
    <div class="flex items-center justify-between">
      <button type="button" id="prevBtn" class="btn btn-secondary" disabled>
        <i class="fas fa-arrow-left mr-2"></i>
        Previous
      </button>
      
      <div class="flex items-center gap-4">
        <button type="button" id="saveBtn" class="btn btn-outline">
          <i class="fas fa-save mr-2"></i>
          Save Progress
        </button>
        
        <button type="button" id="nextBtn" class="btn btn-primary">
          Next
          <i class="fas fa-arrow-right ml-2"></i>
        </button>
        
        <button type="submit" id="submitBtn" class="btn btn-success" style="display: none;">
          <i class="fas fa-check mr-2"></i>
          Complete Setup
        </button>
      </div>
    </div>
  </div>
</div>

<script>
/**
 * Trust Setup Wizard JavaScript
 */
class TrustSetupWizard {
    constructor() {
        this.currentStep = 1;
        this.totalSteps = 5;
        this.formData = {};
        this.init();
    }

    init() {
        this.setupEventListeners();
        this.updateStepDisplay();
        this.loadSavedData();
    }

    setupEventListeners() {
        document.getElementById('nextBtn').addEventListener('click', () => this.nextStep());
        document.getElementById('prevBtn').addEventListener('click', () => this.prevStep());
        document.getElementById('saveBtn').addEventListener('click', () => this.saveProgress());
        document.getElementById('trustWizardForm').addEventListener('submit', (e) => this.submitForm(e));

        // Real-time validation
        const form = document.getElementById('trustWizardForm');
        form.addEventListener('input', () => this.saveFormData());
        form.addEventListener('change', () => this.saveFormData());
    }

    nextStep() {
        if (this.validateCurrentStep()) {
            this.saveFormData();
            if (this.currentStep < this.totalSteps) {
                this.currentStep++;
                this.updateStepDisplay();
                if (this.currentStep === this.totalSteps) {
                    this.populateReview();
                }
            }
        }
    }

    prevStep() {
        if (this.currentStep > 1) {
            this.currentStep--;
            this.updateStepDisplay();
        }
    }

    validateCurrentStep() {
        const currentStepElement = document.querySelector(`.wizard-step[data-step="${this.currentStep}"]`);
        const requiredFields = currentStepElement.querySelectorAll('[required]');
        let isValid = true;

        requiredFields.forEach(field => {
            if (!field.value.trim()) {
                field.classList.add('error');
                isValid = false;
            } else {
                field.classList.remove('error');
            }
        });

        if (!isValid) {
            notifications.error('Validation Error', 'Please fill in all required fields');
        }

        return isValid;
    }

    updateStepDisplay() {
        // Update progress bar
        const progressBar = document.getElementById('progressBar');
        const progressPercent = (this.currentStep / this.totalSteps) * 100;
        progressBar.style.width = `${progressPercent}%`;

        // Update step counter
        document.getElementById('currentStep').textContent = this.currentStep;

        // Update step navigation
        document.querySelectorAll('.step-item').forEach((item, index) => {
            const stepNumber = index + 1;
            if (stepNumber < this.currentStep) {
                item.classList.add('completed');
                item.classList.remove('active');
            } else if (stepNumber === this.currentStep) {
                item.classList.add('active');
                item.classList.remove('completed');
            } else {
                item.classList.remove('active', 'completed');
            }
        });

        // Show/hide wizard steps
        document.querySelectorAll('.wizard-step').forEach(step => {
            step.classList.remove('active');
        });
        document.querySelector(`.wizard-step[data-step="${this.currentStep}"]`).classList.add('active');

        // Update navigation buttons
        document.getElementById('prevBtn').disabled = this.currentStep === 1;
        
        if (this.currentStep === this.totalSteps) {
            document.getElementById('nextBtn').style.display = 'none';
            document.getElementById('submitBtn').style.display = 'inline-flex';
        } else {
            document.getElementById('nextBtn').style.display = 'inline-flex';
            document.getElementById('submitBtn').style.display = 'none';
        }
    }

    saveFormData() {
        const form = document.getElementById('trustWizardForm');
        const formData = new FormData(form);
        this.formData = Object.fromEntries(formData);
        
        // Save to localStorage
        localStorage.setItem('trustWizardData', JSON.stringify(this.formData));
    }

    loadSavedData() {
        const saved = localStorage.getItem('trustWizardData');
        if (saved) {
            try {
                this.formData = JSON.parse(saved);
                const form = document.getElementById('trustWizardForm');
                Object.entries(this.formData).forEach(([name, value]) => {
                    const field = form.querySelector(`[name="${name}"]`);
                    if (field) {
                        if (field.type === 'checkbox') {
                            field.checked = value === field.value;
                        } else {
                            field.value = value;
                        }
                    }
                });
            } catch (error) {
                console.warn('Failed to load saved wizard data:', error);
            }
        }
    }

    saveProgress() {
        this.saveFormData();
        notifications.success('Progress Saved', 'Your progress has been saved successfully');
    }

    populateReview() {
        const reviewContent = document.getElementById('reviewContent');
        
        const sections = [
            {
                title: 'Basic Information',
                fields: [
                    { label: 'Trust Name', value: this.formData.trust_name },
                    { label: 'Trust Code', value: this.formData.trust_code },
                    { label: 'Registration Number', value: this.formData.registration_number },
                    { label: 'Trust Type', value: this.formData.trust_type }
                ]
            },
            {
                title: 'Address',
                fields: [
                    { label: 'Address', value: `${this.formData.address_line1}, ${this.formData.city}` },
                    { label: 'State', value: this.formData.state },
                    { label: 'PIN Code', value: this.formData.pincode }
                ]
            },
            {
                title: 'Contact Person',
                fields: [
                    { label: 'Name', value: this.formData.contact_person_name },
                    { label: 'Designation', value: this.formData.contact_person_designation },
                    { label: 'Mobile', value: this.formData.contact_person_mobile },
                    { label: 'Email', value: this.formData.contact_person_email }
                ]
            }
        ];

        reviewContent.innerHTML = sections.map(section => `
            <div class="mb-6">
                <h4 class="font-semibold text-lg mb-3">${section.title}</h4>
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                    ${section.fields.map(field => `
                        <div class="flex justify-between py-2 border-b border-border">
                            <span class="text-muted">${field.label}:</span>
                            <span class="font-medium">${field.value || 'Not provided'}</span>
                        </div>
                    `).join('')}
                </div>
            </div>
        `).join('');
    }

    async submitForm(event) {
        event.preventDefault();
        
        if (!this.validateCurrentStep()) {
            return;
        }

        const loadingId = notifications.loading('Setting up trust...');

        try {
            this.saveFormData();
            
            const response = await api.post('/api/setup/trust', this.formData);
            
            if (response.success) {
                localStorage.removeItem('trustWizardData');
                notifications.hideLoading(loadingId, 'success', 'Trust Setup Complete', 
                    'Your trust has been set up successfully');
                
                setTimeout(() => {
                    window.location.href = '/dashboard';
                }, 2000);
            } else {
                throw new Error(response.message || 'Setup failed');
            }
        } catch (error) {
            notifications.hideLoading(loadingId, 'error', 'Setup Failed', error.message);
        }
    }
}

// Initialize wizard when DOM is ready
document.addEventListener('DOMContentLoaded', () => {
    new TrustSetupWizard();
});
</script>

<style>
/* Wizard-specific styles */
.wizard-container {
    max-width: 1000px;
    margin: 0 auto;
    padding: 2rem;
}

.wizard-step {
    display: none;
}

.wizard-step.active {
    display: block;
}

.wizard-steps-nav {
    overflow-x: auto;
}

.wizard-steps-nav > div {
    min-width: 600px;
}

.step-item {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.5rem;
    position: relative;
}

.step-circle {
    width: 3rem;
    height: 3rem;
    border-radius: 50%;
    background: var(--surface-alt);
    border: 2px solid var(--border);
    display: flex;
    align-items: center;
    justify-content: center;
    color: var(--text-muted);
    transition: all 0.2s ease;
}

.step-item.active .step-circle {
    background: var(--primary);
    border-color: var(--primary);
    color: white;
}

.step-item.completed .step-circle {
    background: var(--success);
    border-color: var(--success);
    color: white;
}

.step-label {
    font-size: 0.875rem;
    color: var(--text-muted);
    text-align: center;
}

.step-item.active .step-label,
.step-item.completed .step-label {
    color: var(--text-primary);
    font-weight: 500;
}

.step-connector {
    flex: 1;
    height: 2px;
    background: var(--border);
    margin: 0 1rem;
    margin-top: 1.5rem;
}

.form-input.error,
.form-select.error {
    border-color: var(--error);
}

@media (max-width: 768px) {
    .wizard-container {
        padding: 1rem;
    }
    
    .step-label {
        font-size: 0.75rem;
    }
    
    .step-circle {
        width: 2.5rem;
        height: 2.5rem;
    }
}
</style>