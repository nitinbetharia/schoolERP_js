<!-- School setup wizard uses layouts/main layout automatically -->

<!-- School Setup Wizard -->
<div class="wizard-container">
  <!-- Wizard Header -->
  <div class="wizard-header mb-8">
    <div class="flex items-center justify-between">
      <div>
        <h1 class="text-3xl font-bold text-primary">School Setup Wizard</h1>
        <p class="text-muted mt-2">Add a new school to your trust</p>
      </div>
      <div class="wizard-progress">
        <div class="flex items-center gap-2">
          <span class="text-sm text-muted">Step</span>
          <span class="font-bold text-primary" id="currentStep">1</span>
          <span class="text-muted">of</span>
          <span class="font-bold" id="totalSteps">4</span>
        </div>
      </div>
    </div>
  </div>

  <!-- Progress Bar -->
  <div class="wizard-progress-bar mb-8">
    <div class="bg-surface rounded-lg p-1">
      <div class="bg-primary h-2 rounded transition-all duration-300" id="progressBar" style="width: 25%"></div>
    </div>
  </div>

  <!-- Wizard Steps Navigation -->
  <div class="wizard-steps-nav mb-8">
    <div class="flex items-center justify-center">
      <div class="step-item active" data-step="1">
        <div class="step-circle">
          <i class="fas fa-school"></i>
        </div>
        <span class="step-label">Basic Info</span>
      </div>
      <div class="step-connector"></div>
      <div class="step-item" data-step="2">
        <div class="step-circle">
          <i class="fas fa-map-marker-alt"></i>
        </div>
        <span class="step-label">Location</span>
      </div>
      <div class="step-connector"></div>
      <div class="step-item" data-step="3">
        <div class="step-circle">
          <i class="fas fa-chalkboard-teacher"></i>
        </div>
        <span class="step-label">Academic</span>
      </div>
      <div class="step-connector"></div>
      <div class="step-item" data-step="4">
        <div class="step-circle">
          <i class="fas fa-check"></i>
        </div>
        <span class="step-label">Review</span>
      </div>
    </div>
  </div>

  <!-- Wizard Form -->
  <form id="schoolWizardForm" data-autosave="true">
    <!-- Step 1: Basic Information -->
    <div class="wizard-step active" data-step="1">
      <div class="card">
        <div class="card-header">
          <h3 class="font-semibold">School Basic Information</h3>
          <p class="text-muted text-sm">Enter the fundamental details about the school</p>
        </div>
        <div class="card-body">
          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div class="form-group">
              <label class="form-label required">School Name</label>
              <input type="text" name="school_name" class="form-input" required 
                     placeholder="Enter school name">
            </div>

            <div class="form-group">
              <label class="form-label required">School Code</label>
              <input type="text" name="school_code" class="form-input" required 
                     placeholder="Enter unique school code" maxlength="10">
              <small class="form-help">Unique identifier for the school</small>
            </div>

            <div class="form-group">
              <label class="form-label required">School Type</label>
              <select name="school_type" class="form-select" required>
                <option value="">Select school type</option>
                <option value="PRIMARY">Primary School</option>
                <option value="SECONDARY">Secondary School</option>
                <option value="HIGHER_SECONDARY">Higher Secondary School</option>
                <option value="KINDERGARTEN">Kindergarten</option>
                <option value="COMPOSITE">Composite School</option>
              </select>
            </div>

            <div class="form-group">
              <label class="form-label required">Affiliation</label>
              <select name="affiliation" class="form-select" required>
                <option value="">Select affiliation</option>
                <option value="CBSE">CBSE</option>
                <option value="ICSE">ICSE</option>
                <option value="STATE_BOARD">State Board</option>
                <option value="IB">International Baccalaureate</option>
                <option value="IGCSE">IGCSE</option>
              </select>
            </div>

            <div class="form-group">
              <label class="form-label">Affiliation Number</label>
              <input type="text" name="affiliation_number" class="form-input" 
                     placeholder="Enter affiliation number">
            </div>

            <div class="form-group">
              <label class="form-label required">Establishment Date</label>
              <input type="date" name="establishment_date" class="form-input" required>
            </div>

            <div class="form-group">
              <label class="form-label">Principal Name</label>
              <input type="text" name="principal_name" class="form-input" 
                     placeholder="Enter principal name">
            </div>

            <div class="form-group">
              <label class="form-label">Principal Email</label>
              <input type="email" name="principal_email" class="form-input" 
                     placeholder="Enter principal email">
            </div>

            <div class="form-group md:col-span-2">
              <label class="form-label">School Description</label>
              <textarea name="description" class="form-textarea" rows="3" 
                        placeholder="Brief description about the school"></textarea>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Step 2: Location & Contact -->
    <div class="wizard-step" data-step="2">
      <div class="card">
        <div class="card-header">
          <h3 class="font-semibold">School Location & Contact</h3>
          <p class="text-muted text-sm">Provide the address and contact information</p>
        </div>
        <div class="card-body">
          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div class="form-group md:col-span-2">
              <label class="form-label required">Address Line 1</label>
              <input type="text" name="address_line1" class="form-input" required 
                     placeholder="Building/House number, Street name">
            </div>

            <div class="form-group md:col-span-2">
              <label class="form-label">Address Line 2</label>
              <input type="text" name="address_line2" class="form-input" 
                     placeholder="Area, Landmark (optional)">
            </div>

            <div class="form-group">
              <label class="form-label required">City</label>
              <input type="text" name="city" class="form-input" required placeholder="Enter city">
            </div>

            <div class="form-group">
              <label class="form-label required">State</label>
              <select name="state" class="form-select" required>
                <option value="">Select state</option>
                <option value="ANDHRA_PRADESH">Andhra Pradesh</option>
                <option value="KARNATAKA">Karnataka</option>
                <option value="TAMIL_NADU">Tamil Nadu</option>
                <option value="TELANGANA">Telangana</option>
                <!-- Add more states -->
              </select>
            </div>

            <div class="form-group">
              <label class="form-label required">PIN Code</label>
              <input type="text" name="pincode" class="form-input" required 
                     placeholder="Enter PIN code" maxlength="6">
            </div>

            <div class="form-group">
              <label class="form-label">District</label>
              <input type="text" name="district" class="form-input" placeholder="Enter district">
            </div>

            <div class="form-group">
              <label class="form-label required">Phone</label>
              <input type="tel" name="phone" class="form-input" required 
                     placeholder="Enter phone number">
            </div>

            <div class="form-group">
              <label class="form-label required">Email</label>
              <input type="email" name="email" class="form-input" required 
                     placeholder="Enter school email">
            </div>

            <div class="form-group">
              <label class="form-label">Website</label>
              <input type="url" name="website" class="form-input" 
                     placeholder="https://example.com">
            </div>

            <div class="form-group">
              <label class="form-label">Fax</label>
              <input type="text" name="fax" class="form-input" placeholder="Enter fax number">
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Step 3: Academic Information -->
    <div class="wizard-step" data-step="3">
      <div class="card">
        <div class="card-header">
          <h3 class="font-semibold">Academic Configuration</h3>
          <p class="text-muted text-sm">Set up academic structure and configuration</p>
        </div>
        <div class="card-body">
          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div class="form-group">
              <label class="form-label required">Medium of Instruction</label>
              <select name="medium" class="form-select" required multiple>
                <option value="ENGLISH">English</option>
                <option value="HINDI">Hindi</option>
                <option value="KANNADA">Kannada</option>
                <option value="TAMIL">Tamil</option>
                <option value="TELUGU">Telugu</option>
              </select>
              <small class="form-help">Hold Ctrl/Cmd to select multiple</small>
            </div>

            <div class="form-group">
              <label class="form-label required">Classes Offered</label>
              <div class="grid grid-cols-3 gap-2">
                <label class="flex items-center gap-2">
                  <input type="checkbox" name="classes_offered" value="LKG">
                  <span>LKG</span>
                </label>
                <label class="flex items-center gap-2">
                  <input type="checkbox" name="classes_offered" value="UKG">
                  <span>UKG</span>
                </label>
                <label class="flex items-center gap-2">
                  <input type="checkbox" name="classes_offered" value="1">
                  <span>Class 1</span>
                </label>
                <label class="flex items-center gap-2">
                  <input type="checkbox" name="classes_offered" value="2">
                  <span>Class 2</span>
                </label>
                <label class="flex items-center gap-2">
                  <input type="checkbox" name="classes_offered" value="3">
                  <span>Class 3</span>
                </label>
                <label class="flex items-center gap-2">
                  <input type="checkbox" name="classes_offered" value="4">
                  <span>Class 4</span>
                </label>
                <label class="flex items-center gap-2">
                  <input type="checkbox" name="classes_offered" value="5">
                  <span>Class 5</span>
                </label>
                <label class="flex items-center gap-2">
                  <input type="checkbox" name="classes_offered" value="6">
                  <span>Class 6</span>
                </label>
                <label class="flex items-center gap-2">
                  <input type="checkbox" name="classes_offered" value="7">
                  <span>Class 7</span>
                </label>
                <label class="flex items-center gap-2">
                  <input type="checkbox" name="classes_offered" value="8">
                  <span>Class 8</span>
                </label>
                <label class="flex items-center gap-2">
                  <input type="checkbox" name="classes_offered" value="9">
                  <span>Class 9</span>
                </label>
                <label class="flex items-center gap-2">
                  <input type="checkbox" name="classes_offered" value="10">
                  <span>Class 10</span>
                </label>
                <label class="flex items-center gap-2">
                  <input type="checkbox" name="classes_offered" value="11">
                  <span>Class 11</span>
                </label>
                <label class="flex items-center gap-2">
                  <input type="checkbox" name="classes_offered" value="12">
                  <span>Class 12</span>
                </label>
              </div>
            </div>

            <div class="form-group">
              <label class="form-label">Student Capacity</label>
              <input type="number" name="student_capacity" class="form-input" 
                     placeholder="Total student capacity" min="1">
            </div>

            <div class="form-group">
              <label class="form-label">Current Enrollment</label>
              <input type="number" name="current_enrollment" class="form-input" 
                     placeholder="Current student count" min="0">
            </div>

            <div class="form-group">
              <label class="form-label">Working Days</label>
              <div class="grid grid-cols-4 gap-2">
                <label class="flex items-center gap-2">
                  <input type="checkbox" name="working_days" value="MONDAY" checked>
                  <span>Mon</span>
                </label>
                <label class="flex items-center gap-2">
                  <input type="checkbox" name="working_days" value="TUESDAY" checked>
                  <span>Tue</span>
                </label>
                <label class="flex items-center gap-2">
                  <input type="checkbox" name="working_days" value="WEDNESDAY" checked>
                  <span>Wed</span>
                </label>
                <label class="flex items-center gap-2">
                  <input type="checkbox" name="working_days" value="THURSDAY" checked>
                  <span>Thu</span>
                </label>
                <label class="flex items-center gap-2">
                  <input type="checkbox" name="working_days" value="FRIDAY" checked>
                  <span>Fri</span>
                </label>
                <label class="flex items-center gap-2">
                  <input type="checkbox" name="working_days" value="SATURDAY">
                  <span>Sat</span>
                </label>
              </div>
            </div>

            <div class="form-group">
              <label class="form-label">School Timings</label>
              <div class="grid grid-cols-2 gap-4">
                <div>
                  <label class="form-label text-sm">Start Time</label>
                  <input type="time" name="start_time" class="form-input" value="08:00">
                </div>
                <div>
                  <label class="form-label text-sm">End Time</label>
                  <input type="time" name="end_time" class="form-input" value="15:30">
                </div>
              </div>
            </div>

            <div class="form-group md:col-span-2">
              <label class="form-label">Facilities</label>
              <div class="grid grid-cols-2 md:grid-cols-4 gap-4">
                <label class="flex items-center gap-2">
                  <input type="checkbox" name="facilities" value="LIBRARY">
                  <span>Library</span>
                </label>
                <label class="flex items-center gap-2">
                  <input type="checkbox" name="facilities" value="LABORATORY">
                  <span>Laboratory</span>
                </label>
                <label class="flex items-center gap-2">
                  <input type="checkbox" name="facilities" value="PLAYGROUND">
                  <span>Playground</span>
                </label>
                <label class="flex items-center gap-2">
                  <input type="checkbox" name="facilities" value="TRANSPORT">
                  <span>Transport</span>
                </label>
                <label class="flex items-center gap-2">
                  <input type="checkbox" name="facilities" value="CANTEEN">
                  <span>Canteen</span>
                </label>
                <label class="flex items-center gap-2">
                  <input type="checkbox" name="facilities" value="HOSTEL">
                  <span>Hostel</span>
                </label>
                <label class="flex items-center gap-2">
                  <input type="checkbox" name="facilities" value="MEDICAL">
                  <span>Medical Room</span>
                </label>
                <label class="flex items-center gap-2">
                  <input type="checkbox" name="facilities" value="COMPUTER_LAB">
                  <span>Computer Lab</span>
                </label>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Step 4: Review -->
    <div class="wizard-step" data-step="4">
      <div class="card">
        <div class="card-header">
          <h3 class="font-semibold">Review School Information</h3>
          <p class="text-muted text-sm">Please review all information before submitting</p>
        </div>
        <div class="card-body">
          <div id="reviewContent">
            <!-- Review content will be populated by JavaScript -->
          </div>
        </div>
      </div>
    </div>
  </form>

  <!-- Navigation Buttons -->
  <div class="wizard-navigation mt-8">
    <div class="flex items-center justify-between">
      <button type="button" id="prevBtn" class="btn btn-secondary" disabled>
        <i class="fas fa-arrow-left mr-2"></i>
        Previous
      </button>
      
      <div class="flex items-center gap-4">
        <button type="button" id="saveBtn" class="btn btn-outline">
          <i class="fas fa-save mr-2"></i>
          Save Progress
        </button>
        
        <button type="button" id="nextBtn" class="btn btn-primary">
          Next
          <i class="fas fa-arrow-right ml-2"></i>
        </button>
        
        <button type="submit" id="submitBtn" class="btn btn-success" style="display: none;">
          <i class="fas fa-check mr-2"></i>
          Create School
        </button>
      </div>
    </div>
  </div>
</div>

<script>
/**
 * School Setup Wizard JavaScript
 */
class SchoolSetupWizard {
    constructor() {
        this.currentStep = 1;
        this.totalSteps = 4;
        this.formData = {};
        this.init();
    }

    init() {
        this.setupEventListeners();
        this.updateStepDisplay();
        this.loadSavedData();
    }

    setupEventListeners() {
        document.getElementById('nextBtn').addEventListener('click', () => this.nextStep());
        document.getElementById('prevBtn').addEventListener('click', () => this.prevStep());
        document.getElementById('saveBtn').addEventListener('click', () => this.saveProgress());
        document.getElementById('schoolWizardForm').addEventListener('submit', (e) => this.submitForm(e));

        // Real-time validation and save
        const form = document.getElementById('schoolWizardForm');
        form.addEventListener('input', () => this.saveFormData());
        form.addEventListener('change', () => this.saveFormData());
    }

    nextStep() {
        if (this.validateCurrentStep()) {
            this.saveFormData();
            if (this.currentStep < this.totalSteps) {
                this.currentStep++;
                this.updateStepDisplay();
                if (this.currentStep === this.totalSteps) {
                    this.populateReview();
                }
            }
        }
    }

    prevStep() {
        if (this.currentStep > 1) {
            this.currentStep--;
            this.updateStepDisplay();
        }
    }

    validateCurrentStep() {
        const currentStepElement = document.querySelector(`.wizard-step[data-step="${this.currentStep}"]`);
        const requiredFields = currentStepElement.querySelectorAll('[required]');
        let isValid = true;

        requiredFields.forEach(field => {
            if (!field.value.trim()) {
                field.classList.add('error');
                isValid = false;
            } else {
                field.classList.remove('error');
            }
        });

        if (!isValid) {
            notifications.error('Validation Error', 'Please fill in all required fields');
        }

        return isValid;
    }

    updateStepDisplay() {
        // Update progress bar
        const progressBar = document.getElementById('progressBar');
        const progressPercent = (this.currentStep / this.totalSteps) * 100;
        progressBar.style.width = `${progressPercent}%`;

        // Update step counter
        document.getElementById('currentStep').textContent = this.currentStep;

        // Update step navigation
        document.querySelectorAll('.step-item').forEach((item, index) => {
            const stepNumber = index + 1;
            if (stepNumber < this.currentStep) {
                item.classList.add('completed');
                item.classList.remove('active');
            } else if (stepNumber === this.currentStep) {
                item.classList.add('active');
                item.classList.remove('completed');
            } else {
                item.classList.remove('active', 'completed');
            }
        });

        // Show/hide wizard steps
        document.querySelectorAll('.wizard-step').forEach(step => {
            step.classList.remove('active');
        });
        document.querySelector(`.wizard-step[data-step="${this.currentStep}"]`).classList.add('active');

        // Update navigation buttons
        document.getElementById('prevBtn').disabled = this.currentStep === 1;
        
        if (this.currentStep === this.totalSteps) {
            document.getElementById('nextBtn').style.display = 'none';
            document.getElementById('submitBtn').style.display = 'inline-flex';
        } else {
            document.getElementById('nextBtn').style.display = 'inline-flex';
            document.getElementById('submitBtn').style.display = 'none';
        }
    }

    saveFormData() {
        const form = document.getElementById('schoolWizardForm');
        const formData = new FormData(form);
        
        // Handle multiple selections
        this.formData = {};
        for (const [key, value] of formData.entries()) {
            if (this.formData[key]) {
                if (!Array.isArray(this.formData[key])) {
                    this.formData[key] = [this.formData[key]];
                }
                this.formData[key].push(value);
            } else {
                this.formData[key] = value;
            }
        }
        
        // Save to localStorage
        localStorage.setItem('schoolWizardData', JSON.stringify(this.formData));
    }

    loadSavedData() {
        const saved = localStorage.getItem('schoolWizardData');
        if (saved) {
            try {
                this.formData = JSON.parse(saved);
                const form = document.getElementById('schoolWizardForm');
                
                Object.entries(this.formData).forEach(([name, value]) => {
                    const fields = form.querySelectorAll(`[name="${name}"]`);
                    
                    fields.forEach(field => {
                        if (field.type === 'checkbox') {
                            if (Array.isArray(value)) {
                                field.checked = value.includes(field.value);
                            } else {
                                field.checked = value === field.value;
                            }
                        } else if (field.type === 'select-multiple') {
                            if (Array.isArray(value)) {
                                Array.from(field.options).forEach(option => {
                                    option.selected = value.includes(option.value);
                                });
                            }
                        } else {
                            field.value = value;
                        }
                    });
                });
            } catch (error) {
                console.warn('Failed to load saved wizard data:', error);
            }
        }
    }

    saveProgress() {
        this.saveFormData();
        notifications.success('Progress Saved', 'Your progress has been saved successfully');
    }

    populateReview() {
        const reviewContent = document.getElementById('reviewContent');
        
        const sections = [
            {
                title: 'Basic Information',
                fields: [
                    { label: 'School Name', value: this.formData.school_name },
                    { label: 'School Code', value: this.formData.school_code },
                    { label: 'School Type', value: this.formData.school_type },
                    { label: 'Affiliation', value: this.formData.affiliation },
                    { label: 'Principal', value: this.formData.principal_name }
                ]
            },
            {
                title: 'Location & Contact',
                fields: [
                    { label: 'Address', value: `${this.formData.address_line1}, ${this.formData.city}` },
                    { label: 'State', value: this.formData.state },
                    { label: 'PIN Code', value: this.formData.pincode },
                    { label: 'Phone', value: this.formData.phone },
                    { label: 'Email', value: this.formData.email }
                ]
            },
            {
                title: 'Academic Configuration',
                fields: [
                    { label: 'Medium', value: Array.isArray(this.formData.medium) ? this.formData.medium.join(', ') : this.formData.medium },
                    { label: 'Classes', value: Array.isArray(this.formData.classes_offered) ? this.formData.classes_offered.join(', ') : 'Not specified' },
                    { label: 'Capacity', value: this.formData.student_capacity || 'Not specified' },
                    { label: 'Timings', value: `${this.formData.start_time || '08:00'} - ${this.formData.end_time || '15:30'}` }
                ]
            }
        ];

        reviewContent.innerHTML = sections.map(section => `
            <div class="mb-6">
                <h4 class="font-semibold text-lg mb-3">${section.title}</h4>
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                    ${section.fields.map(field => `
                        <div class="flex justify-between py-2 border-b border-border">
                            <span class="text-muted">${field.label}:</span>
                            <span class="font-medium">${field.value || 'Not provided'}</span>
                        </div>
                    `).join('')}
                </div>
            </div>
        `).join('');
    }

    async submitForm(event) {
        event.preventDefault();
        
        if (!this.validateCurrentStep()) {
            return;
        }

        const loadingId = notifications.loading('Creating school...');

        try {
            this.saveFormData();
            
            const response = await api.post('/api/setup/school', this.formData);
            
            if (response.success) {
                localStorage.removeItem('schoolWizardData');
                notifications.hideLoading(loadingId, 'success', 'School Created', 
                    'School has been created successfully');
                
                setTimeout(() => {
                    window.location.href = '/admin/schools';
                }, 2000);
            } else {
                throw new Error(response.message || 'Creation failed');
            }
        } catch (error) {
            notifications.hideLoading(loadingId, 'error', 'Creation Failed', error.message);
        }
    }
}

// Initialize wizard when DOM is ready
document.addEventListener('DOMContentLoaded', () => {
    new SchoolSetupWizard();
});
</script>