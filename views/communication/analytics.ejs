<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Communication Analytics - School ERP</title>
    <%- include('../partials/head') %>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  </head>
  <body>
    <%- include('../partials/navbar') %>

    <div class="container-fluid">
      <div class="row">
        <%- include('../partials/sidebar') %>

        <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
          <div
            class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom"
          >
            <h1 class="h2">Communication Analytics</h1>
            <div class="btn-toolbar mb-2 mb-md-0">
              <div class="btn-group me-2">
                <input type="date" class="form-control" id="startDate" />
                <input type="date" class="form-control" id="endDate" />
                <button class="btn btn-outline-secondary" onclick="loadAnalytics()">
                  <i class="fas fa-sync"></i> Refresh
                </button>
              </div>
              <button type="button" class="btn btn-sm btn-success" onclick="exportReport()">
                <i class="fas fa-download"></i> Export
              </button>
            </div>
          </div>

          <!-- Summary Cards -->
          <div class="row mb-4">
            <div class="col-xl-3 col-md-6">
              <div class="card bg-primary text-white">
                <div class="card-body">
                  <div class="d-flex justify-content-between">
                    <div>
                      <h4 id="totalEmailsSent">0</h4>
                      <p class="mb-0">Emails Sent</p>
                    </div>
                    <div class="align-self-center">
                      <i class="fas fa-envelope fa-2x"></i>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div class="col-xl-3 col-md-6">
              <div class="card bg-info text-white">
                <div class="card-body">
                  <div class="d-flex justify-content-between">
                    <div>
                      <h4 id="totalSMSSent">0</h4>
                      <p class="mb-0">SMS Sent</p>
                    </div>
                    <div class="align-self-center">
                      <i class="fas fa-sms fa-2x"></i>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div class="col-xl-3 col-md-6">
              <div class="card bg-success text-white">
                <div class="card-body">
                  <div class="d-flex justify-content-between">
                    <div>
                      <h4 id="deliveryRate">0%</h4>
                      <p class="mb-0">Delivery Rate</p>
                    </div>
                    <div class="align-self-center">
                      <i class="fas fa-check-circle fa-2x"></i>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div class="col-xl-3 col-md-6">
              <div class="card bg-warning text-white">
                <div class="card-body">
                  <div class="d-flex justify-content-between">
                    <div>
                      <h4 id="totalCost">â‚¹0</h4>
                      <p class="mb-0">Total Cost</p>
                    </div>
                    <div class="align-self-center">
                      <i class="fas fa-rupee-sign fa-2x"></i>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>

          <!-- Charts Row -->
          <div class="row mb-4">
            <div class="col-lg-8">
              <div class="card">
                <div class="card-header">
                  <h5 class="card-title mb-0">Communication Trends</h5>
                </div>
                <div class="card-body">
                  <canvas id="trendsChart" width="400" height="200"></canvas>
                </div>
              </div>
            </div>
            <div class="col-lg-4">
              <div class="card">
                <div class="card-header">
                  <h5 class="card-title mb-0">Communication Types</h5>
                </div>
                <div class="card-body">
                  <canvas id="typeChart" width="400" height="200"></canvas>
                </div>
              </div>
            </div>
          </div>

          <!-- Provider Performance -->
          <div class="row mb-4">
            <div class="col-lg-6">
              <div class="card">
                <div class="card-header">
                  <h5 class="card-title mb-0">Email Provider Performance</h5>
                </div>
                <div class="card-body">
                  <canvas id="emailProviderChart" width="400" height="200"></canvas>
                </div>
              </div>
            </div>
            <div class="col-lg-6">
              <div class="card">
                <div class="card-header">
                  <h5 class="card-title mb-0">SMS Provider Performance</h5>
                </div>
                <div class="card-body">
                  <canvas id="smsProviderChart" width="400" height="200"></canvas>
                </div>
              </div>
            </div>
          </div>

          <!-- Detailed Statistics -->
          <div class="row mb-4">
            <div class="col-lg-8">
              <div class="card">
                <div class="card-header">
                  <h5 class="card-title mb-0">Recent Communications</h5>
                </div>
                <div class="card-body">
                  <div class="table-responsive">
                    <table class="table table-striped" id="recentCommunicationsTable">
                      <thead>
                        <tr>
                          <th>Date</th>
                          <th>Type</th>
                          <th>Subject/Message</th>
                          <th>Recipients</th>
                          <th>Status</th>
                          <th>Provider</th>
                        </tr>
                      </thead>
                      <tbody id="recentCommunicationsBody">
                        <!-- Recent communications will be loaded here -->
                      </tbody>
                    </table>
                  </div>
                </div>
              </div>
            </div>
            <div class="col-lg-4">
              <div class="card">
                <div class="card-header">
                  <h5 class="card-title mb-0">Template Usage</h5>
                </div>
                <div class="card-body">
                  <div id="templateUsage">
                    <!-- Template usage will be loaded here -->
                  </div>
                </div>
              </div>
            </div>
          </div>

          <!-- Delivery Reports -->
          <div class="row">
            <div class="col-12">
              <div class="card">
                <div class="card-header">
                  <h5 class="card-title mb-0">Delivery Reports</h5>
                </div>
                <div class="card-body">
                  <div class="row mb-3">
                    <div class="col-md-3">
                      <select class="form-select" id="reportType">
                        <option value="all">All Communications</option>
                        <option value="email">Email Only</option>
                        <option value="sms">SMS Only</option>
                      </select>
                    </div>
                    <div class="col-md-3">
                      <select class="form-select" id="reportStatus">
                        <option value="">All Status</option>
                        <option value="sent">Sent</option>
                        <option value="delivered">Delivered</option>
                        <option value="failed">Failed</option>
                        <option value="bounced">Bounced</option>
                      </select>
                    </div>
                    <div class="col-md-4">
                      <input
                        type="text"
                        class="form-control"
                        id="searchRecipient"
                        placeholder="Search recipient..."
                      />
                    </div>
                    <div class="col-md-2">
                      <button class="btn btn-primary w-100" onclick="loadDeliveryReports()">
                        <i class="fas fa-search"></i> Search
                      </button>
                    </div>
                  </div>
                  <div class="table-responsive">
                    <table class="table table-striped" id="deliveryReportsTable">
                      <thead>
                        <tr>
                          <th>Date/Time</th>
                          <th>Type</th>
                          <th>Recipient</th>
                          <th>Subject/Message</th>
                          <th>Status</th>
                          <th>Provider</th>
                          <th>Cost</th>
                          <th>Actions</th>
                        </tr>
                      </thead>
                      <tbody id="deliveryReportsBody">
                        <!-- Delivery reports will be loaded here -->
                      </tbody>
                    </table>
                  </div>
                  <nav>
                    <ul class="pagination justify-content-center" id="reportsPagination">
                      <!-- Pagination will be generated here -->
                    </ul>
                  </nav>
                </div>
              </div>
            </div>
          </div>
        </main>
      </div>
    </div>

    <%- include('../partials/scripts') %>
    <script>
      let trendsChart, typeChart, emailProviderChart, smsProviderChart;
      let currentPage = 1;
      const pageSize = 20;

      $(document).ready(function () {
        initializeDateRanges();
        loadAnalytics();
        loadRecentCommunications();
        loadDeliveryReports();
      });

      function initializeDateRanges() {
        const endDate = new Date();
        const startDate = new Date();
        startDate.setDate(startDate.getDate() - 30); // Last 30 days

        $('#endDate').val(endDate.toISOString().split('T')[0]);
        $('#startDate').val(startDate.toISOString().split('T')[0]);
      }

      function loadAnalytics() {
        const startDate = $('#startDate').val();
        const endDate = $('#endDate').val();

        $.get('/api/communication/statistics', {
          start_date: startDate,
          end_date: endDate
        })
          .done(function (response) {
            if (response.success) {
              updateSummaryCards(response.data.summary);
              updateCharts(response.data);
              updateTemplateUsage(response.data.templateUsage);
            }
          })
          .fail(function (xhr) {
            console.error('Failed to load analytics:', xhr.responseJSON);
            showAlert('danger', 'Failed to load analytics data');
          });
      }

      function updateSummaryCards(summary) {
        $('#totalEmailsSent').text(summary.totalEmails || 0);
        $('#totalSMSSent').text(summary.totalSMS || 0);
        $('#deliveryRate').text((summary.deliveryRate || 0) + '%');
        $('#totalCost').text('â‚¹' + (summary.totalCost || 0).toFixed(2));
      }

      function updateCharts(data) {
        updateTrendsChart(data.trends);
        updateTypeChart(data.typeDistribution);
        updateProviderCharts(data.providerPerformance);
      }

      function updateTrendsChart(trendsData) {
        const ctx = document.getElementById('trendsChart').getContext('2d');

        if (trendsChart) {
          trendsChart.destroy();
        }

        trendsChart = new Chart(ctx, {
          type: 'line',
          data: {
            labels: trendsData.labels || [],
            datasets: [
              {
                label: 'Emails',
                data: trendsData.emails || [],
                borderColor: 'rgb(75, 192, 192)',
                backgroundColor: 'rgba(75, 192, 192, 0.2)',
                tension: 0.1
              },
              {
                label: 'SMS',
                data: trendsData.sms || [],
                borderColor: 'rgb(255, 99, 132)',
                backgroundColor: 'rgba(255, 99, 132, 0.2)',
                tension: 0.1
              }
            ]
          },
          options: {
            responsive: true,
            scales: {
              y: {
                beginAtZero: true
              }
            }
          }
        });
      }

      function updateTypeChart(typeData) {
        const ctx = document.getElementById('typeChart').getContext('2d');

        if (typeChart) {
          typeChart.destroy();
        }

        typeChart = new Chart(ctx, {
          type: 'doughnut',
          data: {
            labels: ['Email', 'SMS'],
            datasets: [
              {
                data: [typeData.email || 0, typeData.sms || 0],
                backgroundColor: ['rgba(54, 162, 235, 0.8)', 'rgba(255, 206, 86, 0.8)'],
                borderWidth: 1
              }
            ]
          },
          options: {
            responsive: true,
            maintainAspectRatio: false
          }
        });
      }

      function updateProviderCharts(providerData) {
        // Email Provider Chart
        const emailCtx = document.getElementById('emailProviderChart').getContext('2d');

        if (emailProviderChart) {
          emailProviderChart.destroy();
        }

        emailProviderChart = new Chart(emailCtx, {
          type: 'bar',
          data: {
            labels: providerData.email?.labels || [],
            datasets: [
              {
                label: 'Success Rate (%)',
                data: providerData.email?.successRates || [],
                backgroundColor: 'rgba(75, 192, 192, 0.8)',
                borderColor: 'rgba(75, 192, 192, 1)',
                borderWidth: 1
              }
            ]
          },
          options: {
            responsive: true,
            scales: {
              y: {
                beginAtZero: true,
                max: 100
              }
            }
          }
        });

        // SMS Provider Chart
        const smsCtx = document.getElementById('smsProviderChart').getContext('2d');

        if (smsProviderChart) {
          smsProviderChart.destroy();
        }

        smsProviderChart = new Chart(smsCtx, {
          type: 'bar',
          data: {
            labels: providerData.sms?.labels || [],
            datasets: [
              {
                label: 'Success Rate (%)',
                data: providerData.sms?.successRates || [],
                backgroundColor: 'rgba(255, 159, 64, 0.8)',
                borderColor: 'rgba(255, 159, 64, 1)',
                borderWidth: 1
              }
            ]
          },
          options: {
            responsive: true,
            scales: {
              y: {
                beginAtZero: true,
                max: 100
              }
            }
          }
        });
      }

      function updateTemplateUsage(templateData) {
        const container = $('#templateUsage');
        container.empty();

        if (!templateData || templateData.length === 0) {
          container.html('<p class="text-muted">No template usage data</p>');
          return;
        }

        templateData.forEach(template => {
          const percentage = template.percentage || 0;
          const usageHtml = `
                    <div class="mb-3">
                        <div class="d-flex justify-content-between mb-1">
                            <span class="small">${template.name}</span>
                            <span class="small">${template.count}</span>
                        </div>
                        <div class="progress" style="height: 8px;">
                            <div class="progress-bar" role="progressbar" style="width: ${percentage}%"></div>
                        </div>
                    </div>
                `;
          container.append(usageHtml);
        });
      }

      function loadRecentCommunications() {
        $.get('/api/communication/history', { limit: 10 })
          .done(function (response) {
            if (response.success) {
              displayRecentCommunications(response.data);
            }
          })
          .fail(function (xhr) {
            console.error('Failed to load recent communications:', xhr.responseJSON);
          });
      }

      function displayRecentCommunications(communications) {
        const tbody = $('#recentCommunicationsBody');
        tbody.empty();

        if (communications.length === 0) {
          tbody.append(
            '<tr><td colspan="6" class="text-center text-muted">No recent communications</td></tr>'
          );
          return;
        }

        communications.forEach(comm => {
          const row = `
                    <tr>
                        <td>${formatDateTime(comm.created_at)}</td>
                        <td>
                            <span class="badge bg-${comm.type === 'email' ? 'primary' : 'info'}">
                                ${comm.type.toUpperCase()}
                            </span>
                        </td>
                        <td>${truncateText(comm.subject || comm.message, 50)}</td>
                        <td>1</td>
                        <td>
                            <span class="badge bg-${getStatusColor(comm.status)}">
                                ${comm.status}
                            </span>
                        </td>
                        <td>${comm.provider || 'N/A'}</td>
                    </tr>
                `;
          tbody.append(row);
        });
      }

      function loadDeliveryReports() {
        const filters = {
          type: $('#reportType').val(),
          status: $('#reportStatus').val(),
          search: $('#searchRecipient').val(),
          page: currentPage,
          limit: pageSize,
          start_date: $('#startDate').val(),
          end_date: $('#endDate').val()
        };

        $.get('/api/communication/delivery-reports', filters)
          .done(function (response) {
            if (response.success) {
              displayDeliveryReports(response.data.reports);
              updatePagination(response.data.pagination);
            }
          })
          .fail(function (xhr) {
            console.error('Failed to load delivery reports:', xhr.responseJSON);
          });
      }

      function displayDeliveryReports(reports) {
        const tbody = $('#deliveryReportsBody');
        tbody.empty();

        if (reports.length === 0) {
          tbody.append(
            '<tr><td colspan="8" class="text-center text-muted">No delivery reports found</td></tr>'
          );
          return;
        }

        reports.forEach(report => {
          const row = `
                    <tr>
                        <td>${formatDateTime(report.created_at)}</td>
                        <td>
                            <span class="badge bg-${report.type === 'email' ? 'primary' : 'info'}">
                                ${report.type.toUpperCase()}
                            </span>
                        </td>
                        <td>${report.to_address}</td>
                        <td>${truncateText(report.subject || report.message, 40)}</td>
                        <td>
                            <span class="badge bg-${getStatusColor(report.status)}">
                                ${report.status}
                            </span>
                        </td>
                        <td>${report.provider || 'N/A'}</td>
                        <td>â‚¹${(report.cost || 0).toFixed(4)}</td>
                        <td>
                            <button class="btn btn-sm btn-outline-info" onclick="viewDetails(${report.id})" title="View Details">
                                <i class="fas fa-eye"></i>
                            </button>
                        </td>
                    </tr>
                `;
          tbody.append(row);
        });
      }

      function updatePagination(pagination) {
        const paginationContainer = $('#reportsPagination');
        paginationContainer.empty();

        if (pagination.totalPages <= 1) return;

        // Previous button
        const prevDisabled = pagination.currentPage === 1 ? 'disabled' : '';
        paginationContainer.append(`
                <li class="page-item ${prevDisabled}">
                    <a class="page-link" href="#" onclick="goToPage(${pagination.currentPage - 1})">Previous</a>
                </li>
            `);

        // Page numbers
        for (let i = 1; i <= pagination.totalPages; i++) {
          const active = i === pagination.currentPage ? 'active' : '';
          paginationContainer.append(`
                    <li class="page-item ${active}">
                        <a class="page-link" href="#" onclick="goToPage(${i})">${i}</a>
                    </li>
                `);
        }

        // Next button
        const nextDisabled = pagination.currentPage === pagination.totalPages ? 'disabled' : '';
        paginationContainer.append(`
                <li class="page-item ${nextDisabled}">
                    <a class="page-link" href="#" onclick="goToPage(${pagination.currentPage + 1})">Next</a>
                </li>
            `);
      }

      function goToPage(page) {
        currentPage = page;
        loadDeliveryReports();
      }

      function viewDetails(communicationId) {
        // Implement view details functionality
        alert('View details for communication ID: ' + communicationId);
      }

      function exportReport() {
        const startDate = $('#startDate').val();
        const endDate = $('#endDate').val();

        const url = `/api/communication/export?start_date=${startDate}&end_date=${endDate}`;
        window.open(url, '_blank');
      }

      function formatDateTime(dateString) {
        return new Date(dateString).toLocaleString();
      }

      function formatDate(dateString) {
        return new Date(dateString).toLocaleDateString();
      }

      function truncateText(text, maxLength) {
        if (!text) return 'N/A';
        return text.length > maxLength ? text.substring(0, maxLength) + '...' : text;
      }

      function getStatusColor(status) {
        switch (status?.toLowerCase()) {
          case 'sent':
          case 'delivered':
            return 'success';
          case 'failed':
          case 'bounced':
            return 'danger';
          case 'pending':
            return 'warning';
          default:
            return 'secondary';
        }
      }

      function showAlert(type, message) {
        const alertHtml = `
                <div class="alert alert-${type} alert-dismissible fade show" role="alert">
                    ${message}
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            `;

        $('.alert').remove();
        $('main').prepend(alertHtml);

        setTimeout(function () {
          $('.alert').fadeOut();
        }, 5000);
      }
    </script>
  </body>
</html>
