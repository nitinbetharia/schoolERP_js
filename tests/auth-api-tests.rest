# School ERP AUTH Module API Tests
# Use with REST Client extension in VS Code
# @author School ERP Team
# @version 1.0.0

### Variables
@baseUrl = http://localhost:3000
@apiVersion = v1

### 1. Health Check
GET {{baseUrl}}/api/{{apiVersion}}/health
Content-Type: application/json

###

### 2. System Admin Login
# @name systemLogin
POST {{baseUrl}}/api/{{apiVersion}}/auth/login
Content-Type: application/json

{
  "email": "admin@system.local",
  "password": "admin123",
  "remember_me": false
}

###

### 3. Trust User Login
# @name trustLogin
POST {{baseUrl}}/api/{{apiVersion}}/auth/login
Content-Type: application/json

{
  "email": "admin@demo.school",
  "password": "password123",
  "trust_code": "demo",
  "school_id": 1,
  "remember_me": true
}

###

### 4. Invalid Login Attempt (should fail)
POST {{baseUrl}}/api/{{apiVersion}}/auth/login
Content-Type: application/json

{
  "email": "wrong@email.com",
  "password": "wrongpassword"
}

###

### 5. Get Current User Info (requires authentication)
GET {{baseUrl}}/api/{{apiVersion}}/auth/me
Content-Type: application/json

###

### 6. Check Authentication Status
GET {{baseUrl}}/api/{{apiVersion}}/auth/status
Content-Type: application/json

###

### 7. Change Password (requires authentication)
POST {{baseUrl}}/api/{{apiVersion}}/auth/change-password
Content-Type: application/json

{
  "currentPassword": "admin123",
  "newPassword": "newPassword123!",
  "confirmPassword": "newPassword123!"
}

###

### 8. Trust Lookup
GET {{baseUrl}}/api/{{apiVersion}}/auth/trusts/demo
Content-Type: application/json

###

### 9. Invalid Trust Lookup (should return 404)
GET {{baseUrl}}/api/{{apiVersion}}/auth/trusts/nonexistent
Content-Type: application/json

###

### 10. Forgot Password Request
POST {{baseUrl}}/api/{{apiVersion}}/auth/forgot-password
Content-Type: application/json

{
  "email": "admin@demo.school",
  "trust_code": "demo"
}

###

### 11. Get User Permissions (requires authentication)
GET {{baseUrl}}/api/{{apiVersion}}/auth/permissions
Content-Type: application/json

###

### 12. Logout (requires authentication)
POST {{baseUrl}}/api/{{apiVersion}}/auth/logout
Content-Type: application/json

###

### Error Test Cases ###

### 13. Rate Limiting Test (run multiple times rapidly)
POST {{baseUrl}}/api/{{apiVersion}}/auth/login
Content-Type: application/json

{
  "email": "test@test.com",
  "password": "wrongpassword"
}

###

### 14. Validation Error Test (invalid email format)
POST {{baseUrl}}/api/{{apiVersion}}/auth/login
Content-Type: application/json

{
  "email": "invalid-email",
  "password": ""
}

###

### 15. Missing Fields Test
POST {{baseUrl}}/api/{{apiVersion}}/auth/login
Content-Type: application/json

{
  "email": "test@test.com"
}

###

### 16. Empty Body Test
POST {{baseUrl}}/api/{{apiVersion}}/auth/login
Content-Type: application/json

{}

###

### Advanced Test Cases ###

### 17. Trust Login without Trust Code (should fail)
POST {{baseUrl}}/api/{{apiVersion}}/auth/login
Content-Type: application/json

{
  "email": "admin@demo.school",
  "password": "password123",
  "school_id": 1
}

###

### 18. Trust Login with Invalid Trust Code
POST {{baseUrl}}/api/{{apiVersion}}/auth/login
Content-Type: application/json

{
  "email": "admin@demo.school",
  "password": "password123",
  "trust_code": "invalid",
  "school_id": 1
}

###

### 19. Trust Login with Invalid School ID
POST {{baseUrl}}/api/{{apiVersion}}/auth/login
Content-Type: application/json

{
  "email": "admin@demo.school",
  "password": "password123",
  "trust_code": "demo",
  "school_id": 999
}

###

### 20. Change Password with Mismatched Confirmation
POST {{baseUrl}}/api/{{apiVersion}}/auth/change-password
Content-Type: application/json

{
  "currentPassword": "admin123",
  "newPassword": "newPassword123!",
  "confirmPassword": "differentPassword123!"
}

###

### 21. Change Password with Weak Password
POST {{baseUrl}}/api/{{apiVersion}}/auth/change-password
Content-Type: application/json

{
  "currentPassword": "admin123",
  "newPassword": "123",
  "confirmPassword": "123"
}

###

### 22. Forgot Password without Email
POST {{baseUrl}}/api/{{apiVersion}}/auth/forgot-password
Content-Type: application/json

{
  "trust_code": "demo"
}

###

### Performance Test Cases ###

### 23. Concurrent Login Test (run multiple times)
POST {{baseUrl}}/api/{{apiVersion}}/auth/login
Content-Type: application/json

{
  "email": "admin@system.local",
  "password": "admin123"
}

###

### 24. Multiple Status Checks (performance test)
GET {{baseUrl}}/api/{{apiVersion}}/auth/status
Content-Type: application/json

###

### Security Test Cases ###

### 25. SQL Injection Attempt in Email
POST {{baseUrl}}/api/{{apiVersion}}/auth/login
Content-Type: application/json

{
  "email": "admin@system.local' OR '1'='1",
  "password": "admin123"
}

###

### 26. XSS Attempt in Email
POST {{baseUrl}}/api/{{apiVersion}}/auth/login
Content-Type: application/json

{
  "email": "<script>alert('xss')</script>",
  "password": "admin123"
}

###

### 27. Very Long Email (buffer overflow test)
POST {{baseUrl}}/api/{{apiVersion}}/auth/login
Content-Type: application/json

{
  "email": "{'a' * 10000}@test.com",
  "password": "admin123"
}

###

### 28. Special Characters in Password
POST {{baseUrl}}/api/{{apiVersion}}/auth/login
Content-Type: application/json

{
  "email": "admin@system.local",
  "password": "!@#$%^&*()_+-=[]{}|;:,.<>?"
}

###

### Complete Test Sequence ###
### Run this sequence to test full authentication flow

### A. Start with health check
GET {{baseUrl}}/api/{{apiVersion}}/health

### B. System login
POST {{baseUrl}}/api/{{apiVersion}}/auth/login
Content-Type: application/json

{
  "email": "admin@system.local",
  "password": "admin123"
}

### C. Check user info
GET {{baseUrl}}/api/{{apiVersion}}/auth/me

### D. Check permissions
GET {{baseUrl}}/api/{{apiVersion}}/auth/permissions

### E. Logout
POST {{baseUrl}}/api/{{apiVersion}}/auth/logout

### F. Verify logout (should show unauthenticated)
GET {{baseUrl}}/api/{{apiVersion}}/auth/status

###

# END OF AUTH MODULE TESTS
# Total Tests: 28 test cases covering:
# - Basic functionality (11 tests)
# - Error handling (6 tests)
# - Advanced scenarios (4 tests)
# - Performance (2 tests)
# - Security (4 tests)
# - Complete flow (1 test)